<?php
/* === Class Library ========================================================== *
 * Copyright (c) 2017-2020 Mootly Obviate - See /LICENSE.md
 * --- Revision History ------------------------------------------------------- *
 * 2018-05-09 | Copied over from test page.
 * ---------------------------------------------------------------------------- */
                    # Call config to init the application
require_once( $_SERVER['DOCUMENT_ROOT'].'/config.php' );
                    # Build the page ------------------------------------------ *
                    # Content developers shouldn't touch anything above here.
                    # ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ EDIT BELOW ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
                    # page_name should equal your H1 title.
$mpo_parts->h1_title          = 'Class List';
$mpo_parts->link_title        = 'Classes';
$mpo_parts->page_name         = $mpo_parts->h1_title;
$mpo_parts->section_name      = 'Docs : Classes';
$mpo_parts->section_base      = $mpo_paths->docs;
$mpo_parts->pagemenu          = 'import';
$mpo_parts->bodyclasses       = 'final, tech-notes';
                    # import page components that are not generated by template.
ob_start();
require_once( MP_ROOT.'/docs/_assets/includes/menu.docs.php' );
$mpo_parts->page_menu = ob_get_clean();
ob_end_clean();
require_once( $mpo_paths->php_widgets.'/menus/simple_crumbs.php' );
                    # The main content body of the page is developed here.
                    # It can be built from pieces or written as a block,
                    # depending on the site.
ob_start();
?>
<!-- *** BEGIN CONTENT ******************************************************** -->

<p>MoosePress uses objects for tracking various page components and some of the site settings. This is to make the code easier to use and to allow for automated validation of various elements.</p>

<h2>What's Here</h2>

<table class="list-table" title="List of section contents">
  <thead>
    <tr>
      <th scope="col">Page</th>
      <th scope="col">Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th colspan="2">List of Objects</th>
    </tr>
    <tr>
      <td><a href="<?=CURR_PATH?>/mpc_cookies.php">mpc_cookies</a></td>
      <td>The <cite>cookie</cite> object manages cookie handling.</td>
    </tr>
    <tr>
      <td><a href="<?=CURR_PATH?>/mpc_datacleaner.php">mpc_datacleaner</a></td>
      <td>The <cite>datacleaner</cite> object accepts GET and POST data and sanitizes it for consumption. All calls to user-provided data should go through this object.</td>
    </tr>
    <tr>
      <td><a href="<?=CURR_PATH?>/mpc_db.php">mpc_db</a></td>
      <td>The <cite>db</cite> object abstracts and manages database calls.</td>
    </tr>
    <tr>
      <td><a href="<?=CURR_PATH?>/mpc_filefinder.php">mpc_filefinder</a></td>
      <td>The <cite>filefinder</cite> automates certain find processes in the case of 404 and other simple searches.</td>
    </tr>
    <tr>
      <td><a href="<?=CURR_PATH?>/mpc_menus.php">mpc_menus</a></td>
      <td>The <cite>menu</cite> object stores the menu sets for a page.</td>
    </tr>
    <tr>
      <td><a href="<?=CURR_PATH?>/mpc_parts.php">mpc_parts</a></td>
      <td>The <cite>parts</cite> object contains information fields for a page as well as a content blob.</td>
    </tr>
    <tr>
      <td><a href="<?=CURR_PATH?>/mpc_paths.php">mpc_paths</a></td>
      <td>The <cite>paths</cite> object stores internal paths for PHP use. This is to allow paths to be defined up front and then called from the object. This reduces typos and inconsistencies.</td>
    </tr>
    <tr>
      <td><a href="<?=CURR_PATH?>/mpc_sessions.php">mpc_sessions</a></td>
      <td>The <cite>session</cite> object stores the menu sets for a page.</td>
    </tr>
  </tbody>
</table>
<!-- *** end contents ********************************************************* -->
<?php
                    # ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ EDIT ABOVE ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑
                    # Content developers shouldn't touch anything below here.
$mpo_parts->main_content = ob_get_clean();
ob_end_clean();
                    // Submit to template generator --------------------------- *
mpf_renderPage($mpo_parts->template.$mpt_['default'].$mpt_['suffix'], $mpo_parts);
?>
