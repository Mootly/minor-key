@import url("https://fonts.googleapis.com/css?family=Muli:400,600,700");@import url("https://fonts.googleapis.com/css?family=Prompt:400,600,700,900");@import url("https://fonts.googleapis.com/css?family=Source+Code+Pro");@import url("https://fonts.googleapis.com/css?family=Walter+Turncoat");@import url("https://fonts.googleapis.com/css?family=Short+Stack");@import url("https://fonts.googleapis.com/css?family=Fira+Mono:400,700&subset=latin-ext");html{font-size:100%;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;height:100%}body{margin:0;height:100%;font-family:"Muli","Arial",sans-serif}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}.lt-ie8 audio,.lt-ie8 canvas,.lt-ie8 video{display:inline;zoom:1}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}template,[hidden]{display:none}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}abbr{border-bottom:1px dotted #464a4b}b,strong{font-weight:inherit}b,strong{font-weight:bold}dfn,cite,em,i,var{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}pre{overflow:auto}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:focus{outline:thin dotted #464a4b;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}a:active,a:hover{outline:0;outline-width:0}img{border-style:none;border:0}img{max-width:100%;height:auto;vertical-align:middle;border:0;-ms-interpolation-mode:bicubic}.lt-ie8 img{width:auto\9}svg:not(:root){overflow:hidden}audio,canvas,iframe,img,svg,video{vertical-align:middle}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}optgroup{font-weight:bold}button,input{overflow:visible;line-height:normal}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}input{line-height:normal}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid #464a4b;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;border:0;white-space:normal}textarea{overflow:auto;vertical-align:top}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-moz-box-sizing:content-box;box-sizing:content-box;-webkit-appearance:textfield;outline-offset:-2px}input[type="search"]::-webkit-search-decoration,input[type="search"]::-webkit-search-cancel-button{-webkit-appearance:none}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}label,select,button,input[type="button"],input[type="reset"],input[type="submit"],input[type="radio"],input[type="checkbox"]{cursor:pointer}@media print{*,*:before,*:after{text-shadow:none        !important;color:#000 !important;background:transparent !important;box-shadow:none        !important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="javascript:"]:after,a[href^="#"]:after{content:""}pre,blockquote{border:1px solid #464a4b;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}img{max-width:100% !important}@page{margin:0.25in}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}}#access-nav{width:100%;margin:0;padding:0}#access-nav h1,#access-nav h2,#access-nav p,#access-nav ol,#access-nav li,#access-nav a{position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;overflow:hidden;margin:-1px;border:0;padding:0}.reader-only{display:block;position:absolute;top:0;left:-1000em}@media (min-width: 50em){#access-nav a:focus{display:block;position:static;clip:auto;width:100%;height:auto;overflow:visible;margin:0;padding:0.5em;background-color:#aa88b0;text-align:center;color:#f6f3f4;font-weight:bold;font-size:1.25em;z-index:500}}body{box-sizing:border-box;position:relative;margin:0;padding:0;background-color:#f6f3f4;color:#110f10;font:normal normal 400 1em "Muli","Arial",sans-serif;line-height:1.75em}h1#first-el{position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;overflow:hidden;margin:-1px;border:0;padding:0}#title-box{margin:0;background-color:#f6f3f4;border-bottom:2px solid #aa88b0;box-shadow:2px 2px 2px #ceccd5;box-shadow:2px 2px 2px rgba(85,85,119,0.25)}#title-box h1,#title-box h2.page-title{margin:0;padding:0.25em 0.5em 0.125em 0.5em;font-family:"Prompt","Arial Black",sans-serif;font-size:2.5em;font-weight:900;line-height:1.0625em;color:#557;text-shadow:2px 2px 2px #ceccd5;text-shadow:2px 2px 2px rgba(85,85,119,0.25)}#content-main #content-box{margin:1.0em 2.0em 2.0em 20.0em;max-width:60em}#content-main p{line-height:1.375em}#content-main h1{color:#557;font-family:"Prompt","Arial Black",sans-serif;font-weight:900}#content-main h2{margin:1.25em 0 0 0;font-family:"Prompt","Arial Black",sans-serif;font-weight:900;font-size:2em;line-height:1.0625em;color:#525272}#content-main h3{margin:1.25em 0 0 0;font-family:"Prompt","Arial Black",sans-serif;font-weight:700;font-size:1.75em;line-height:1.0625em;color:#4e4e6d}#content-main h4{margin:1.0em 0 0 0;font-family:"Prompt","Arial Black",sans-serif;font-weight:700;font-size:1.375em;line-height:1.0625em;color:#4b4b68}#content-main h5{margin:1.0em 0 0 0;font-family:"Prompt","Arial Black",sans-serif;font-weight:600;font-size:1.1875em;line-height:1.0625em;color:#474762}#content-main h6{margin:1.0em 0 0 0;font-family:"Prompt","Arial Black",sans-serif;font-weight:600;font-size:1.0625em;line-height:1.0625em;color:#474762}#content-main h2+p,#content-main h3+p,#content-main h4+p,#content-main h5+p,#content-main h6+p{margin-top:0.5em}#content-main a{color:#201188;text-decoration:none;border-bottom:1px solid #d6d1e4;border-bottom:1px solid rgba(32,17,136,0.15)}#content-main a:visited{color:#201188}#content-main a:hover{border-bottom:1px solid #403398;border-bottom:1px solid rgba(32,17,136,0.85);background-color:#f1edf0;background-color:rgba(51,20,64,0.025)}@media (max-width: 64em){.no-mobile{display:none}#breadcrumb-box{border-top:1px solid #e3d8e3;border-top:1px solid rgba(170,136,176,0.25)}#title-box{clear:both}#title-box h1,#title-box h2.page-title{padding:0.125em 0.25em 0.125em 0.25em;font-family:"Prompt","Arial Black",sans-serif;font-size:2em;font-weight:900;line-height:1.0625em;color:#557}#content-main{clear:both}#content-main #content-box{margin:2.0em}}#page-header{position:relative;z-index:30;clear:both;margin:0;background-color:#aa88b0;color:#f6f3f4;font-family:"Prompt","Arial",sans-serif;font-weight:bold;letter-spacing:0.05em}#page-header #header-title{padding:0.125em 1.0em 0.125em 1.0em;font-family:"Prompt","Arial Black",sans-serif;font-size:1.5em}#page-header #navigation-search{position:relative;box-sizing:border-box;width:100%;border-bottom:0.125em solid #aa88b0;padding:0;background-color:#fff;text-align:left;font-size:1.125em;margin:0.125em 0.125em 0 0}@media (min-width: 50em){#page-header #navigation-search{display:block !important}}#page-header #navigation-search button,#page-header #navigation-search input{box-sizing:border-box;margin:0;border:0;padding:0.25em;color:#464a4b;font-family:"Muli","Arial",sans-serif;font-weight:normal;text-align:left}#page-header #navigation-search input{height:2.1825em;width:85%;margin-left:5.0em;padding:0.25em 1.0em;background-color:#fff;border:0}#page-header #navigation-search button{box-sizing:border-box;background-color:#aa88b0;border-right:2px solid #aa88b0;padding:0.1875em 1.75em 0.1875em 1.75em;color:#f6f3f4;font-weight:bold;font-size:1.01em}@media (min-width: 50em){#page-header #navigation-search button{height:2.1675em;position:absolute;top:0;left:0}}#page-header #navigation-search button:hover{background-color:#663070}#page-header #header-nav{clear:both}#page-header #header-nav ul{list-style-type:none;padding:0;margin:0 0 0 1.25em}#page-header #header-nav ul li{display:inline;line-height:1.25em}#page-header #header-nav ul li a{display:inline-block;box-sizing:border-box;padding:0.5em 0.75em;font-size:0.875em}#page-header #header-nav ul li a:hover{text-decoration:underline}#page-header a,#page-header a:active,#page-header a:hover,#page-header a:link,#page-header a:visited{text-decoration:none;color:#f6f3f4}#page-header #google-translate-box{float:right;padding:0 1.0em 0.25em 1.0em}#page-header #google-translate-box a,#page-header #google-translate-box a:active,#page-header #google-translate-box a:hover,#page-header #google-translate-box a:link,#page-header #google-translate-box a:visited{text-decoration:none;color:#110f10}@media (max-width: 50em){div.mobile-only{display:block}span.mobile-only{display:inline}#page-header .fa{display:inline;display:inline-block}#page-header #header-title{margin:0 0 0 6.0em;padding:0 0.5em 0 1.375em;text-align:right;font-size:1.125em}#page-header #header-nav-toggle{display:block;position:absolute;top:0;left:0.25em;margin:0;padding:0;font-size:2em;text-decoration:none;color:#f6f3f4}#page-header #header-nav-toggle span{display:none}#page-header #header-nav-toggle a{display:inline-block;padding:0.375em 0.5em 0.5em 0.25em;border-right:1px solid #e3d8e3;border-right:1px solid rgba(246,243,244,0.75)}#page-header #header-nav{clear:both;margin-top:0}#page-header #header-nav #header-nav-body{box-sizing:border-box;margin-top:0}#page-header #header-nav #header-nav-body.mobile-hidden{position:absolute;top:0;left:-1000em}#page-header #header-nav #header-nav-body ul#header-nav-list{box-sizing:border-box;margin-top:0;margin-left:0;border-top:0.125em solid #f6f3f4;background-color:#aa88b0}#page-header #header-nav #header-nav-body li{display:block;font-size:1.5em}#page-header #header-nav #header-nav-body li a{width:100%;border-bottom:1px solid #4c404c;padding-left:2.0em}#page-header #header-nav #header-nav-body li a:hover,#page-header #header-nav #header-nav-body li a:focus{text-decoration:none;background-color:#663070}#page-header #navigation-search{box-sizing:border-box;margin:0;font-size:1.5em}#page-header #navigation-search.mobile-hidden{position:absolute;top:0;left:-1000em}#page-header #navigation-search input{width:80%;margin-right:4.0em;margin-left:0}#page-header #navigation-search button{position:absolute;top:0;right:0;border-left:2px solid #eae3ee;border-right:0;font-size:1.0em}#page-header #navigation-search button:hover{background-color:#eae3ee;color:#110f10}#page-header #google-translate-box{float:none;text-align:right;padding-right:0.5em}}#content-main #breadcrumb-box{padding:0.375em 0 0.25em 1.0em;background-color:#f6f3f4;color:#464a4b}#content-main #breadcrumb-box a{font-family:"Prompt","Arial",sans-serif;font-weight:bold;border:0}#content-main #breadcrumb-box a:hover{border-bottom:1px solid #23117d;border-bottom:1px solid rgba(32,17,136,0.85)}@media (max-width: 64em){#content-main #breadcrumb-box{border-top:1px solid #e3d8e3;border-top:1px solid rgba(170,136,176,0.25);border-bottom:1px solid #e3d8e3;border-bottom:1px solid rgba(170,136,176,0.25)}}pre{background-color:#e8e5e6;background-color:rgba(17,15,16,0.0625);border-left:.5em solid #bdbabb;border-left:.5em solid rgba(17,15,16,0.25);overflow:auto;color:#331440;padding:0.75em;font-family:"Source Code Pro",monospace;font-size:0.875em;line-height:1.75em}pre var{color:#4c404c;font-style:italic}code{font-family:"Source Code Pro",monospace;color:#331440}code var{color:#4c404c;font-style:italic}.center{text-align:center;margin-left:auto;margin-right:auto}.fleft{float:left;margin-right:1.0em}.fright{float:right;margin-left:1.0em}.clear-fix{clear:both}.clear-left{clear:left}.clear-right{clear:right}.fixed-top{position:fixed;top:0;left:0;width:100%}.fixed-bottom{position:fixed;bottom:0;left:0;width:100%}.mobile-only,.hide{display:none}.hidden{width:0;height:0;overflow:hidden}.toggleHide{display:none !important}.toggleShow{display:block !important}div.anchor,div.anchor:focus{outline:none}.anchor:before{display:block;position:relative;width:0;height:2.5em;margin-top:-2.5em;content:''}body.draft{font-family:"Short Stack","Arial",sans-serif}body.draft #page-header{font-family:"Walter Turncoat","Arial",sans-serif}body.draft #page-header #header-title{font-family:"Walter Turncoat","Arial Black",sans-serif}body.draft #title-box h1,body.draft #title-box h2.page-title{font-family:"Walter Turncoat","Arial Black",sans-serif}body.draft #content-main #breadcrumb-box a{font-family:"Walter Turncoat","Arial",sans-serif}body.draft #content-main h1,body.draft #content-main h2,body.draft #content-main h3,body.draft #content-main h4,body.draft #content-main h5,body.draft #content-main h6{font-family:"Walter Turncoat","Arial Black",sans-serif}body.draft pre,body.draft code{font-family:"Fira Mono","Source Code Pro",monospace}/*! -- Copyright (c) 2017-2018 Mootly Obviate -- See /LICENSE.md -------------- */

/*# sourceMappingURL=data:application/json;base64, */