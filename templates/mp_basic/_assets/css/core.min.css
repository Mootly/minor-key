@import url("https://fonts.googleapis.com/css?family=Muli:400,600,700");@import url("https://fonts.googleapis.com/css?family=Prompt:400,600,700,900");@import url("https://fonts.googleapis.com/css?family=Source+Code+Pro");@import url("https://fonts.googleapis.com/css?family=Walter+Turncoat");@import url("https://fonts.googleapis.com/css?family=Short+Stack");@import url("https://fonts.googleapis.com/css?family=Fira+Mono:400,700&subset=latin-ext");html{font-size:100%;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;height:100%}body{margin:0;height:100%;font-family:"Muli","Arial",sans-serif}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}.lt-ie8 audio,.lt-ie8 canvas,.lt-ie8 video{display:inline;zoom:1}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}template,[hidden]{display:none}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}abbr{border-bottom:1px dotted #464a4b}b,strong{font-weight:inherit}b,strong{font-weight:bold}dfn,cite,em,i,var{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}pre{overflow:auto}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:focus{outline:thin dotted #464a4b;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}a:active,a:hover{outline:0;outline-width:0}img{border-style:none;border:0}img{max-width:100%;height:auto;vertical-align:middle;border:0;-ms-interpolation-mode:bicubic}.lt-ie8 img{width:auto\9}svg:not(:root){overflow:hidden}audio,canvas,iframe,img,svg,video{vertical-align:middle}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}optgroup{font-weight:bold}button,input{overflow:visible;line-height:normal}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}input{line-height:normal}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid #464a4b;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;border:0;white-space:normal}textarea{overflow:auto;vertical-align:top}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-moz-box-sizing:content-box;box-sizing:content-box;-webkit-appearance:textfield;outline-offset:-2px}input[type="search"]::-webkit-search-decoration,input[type="search"]::-webkit-search-cancel-button{-webkit-appearance:none}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}label,select,button,input[type="button"],input[type="reset"],input[type="submit"],input[type="radio"],input[type="checkbox"]{cursor:pointer}@media print{*,*:before,*:after{text-shadow:none        !important;color:#000 !important;background:transparent !important;box-shadow:none        !important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="javascript:"]:after,a[href^="#"]:after{content:""}pre,blockquote{border:1px solid #464a4b;page-break-inside:avoid}thead{display:table-header-group}tr,img{page-break-inside:avoid}img{max-width:100% !important}@page{margin:0.25in}p,h2,h3{orphans:3;widows:3}h2,h3{page-break-after:avoid}}#access-nav{width:100%;margin:0;padding:0}#access-nav h1,#access-nav h2,#access-nav p,#access-nav ol,#access-nav li,#access-nav a{position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;overflow:hidden;margin:-1px;border:0;padding:0}.reader-only{display:block;position:absolute;top:0;left:-1000em}@media (min-width: 50em){#access-nav a:focus{display:block;position:static;clip:auto;width:100%;height:auto;overflow:visible;margin:0;padding:0.5em;background-color:#634464;text-align:center;color:#f6f3f4;font-weight:bold;font-size:1.25em;z-index:500}}body{box-sizing:border-box;position:relative;margin:0;padding:0;background-color:#f6f3f4;color:#110f10;font:normal normal 400 1em "Muli","Arial",sans-serif;line-height:1.75em}#content-main{width:100%}#content-main #content-box{margin:1.0em 2.0em 2.0em 20.0em;max-width:60em}#content-main p{line-height:1.375em}#content-main h1+p,#content-main h2+p,#content-main h3+p,#content-main h4+p,#content-main h5+p,#content-main h6+p{margin-top:0}#content-main h1{padding:1.25em 0 0.5em 0;margin:0;color:#557;font-family:"Prompt","Arial Black",sans-serif;font-weight:900}#content-main h2{padding:1.25em 0 0.375em 0;margin:0;font-family:"Prompt","Arial Black",sans-serif;font-weight:900;font-size:2em;line-height:1.0625em;color:#525272}#content-main h3{padding:1.25em 0 0.375em 0;margin:0;font-family:"Prompt","Arial Black",sans-serif;font-weight:700;font-size:1.75em;line-height:1.0625em;color:#4e4e6d}#content-main h4{padding:1.25em 0 0.375em 0;margin:0;font-family:"Prompt","Arial Black",sans-serif;font-weight:700;font-size:1.375em;line-height:1.0625em;color:#4b4b68}#content-main h5{padding:1.25em 0 0.375em 0;margin:0;font-family:"Prompt","Arial Black",sans-serif;font-weight:600;font-size:1.1875em;line-height:1.0625em;color:#474762}#content-main h6{padding:1.25em 0 0.375em 0;margin:0;font-family:"Prompt","Arial Black",sans-serif;font-weight:600;font-size:1.0625em;line-height:1.0625em;color:#44445d}#content-main a{color:#201188;text-decoration:none;border-bottom:1px solid #d6d1e4;border-bottom:1px solid rgba(32,17,136,0.15)}#content-main a:visited{color:#201188}#content-main a:hover{border-bottom:1px solid #403398;border-bottom:1px solid rgba(32,17,136,0.85);background-color:#f2eef0;background-color:rgba(67,37,70,0.025)}@media (max-width: 64em){.no-mobile{display:none}#breadcrumb-box{border-top:1px solid #d1c7d0;border-top:1px solid rgba(99,68,100,0.25)}#title-box{clear:both}#title-box h1,#title-box h2.page-title{padding:0.125em 0.25em 0.125em 0.25em;font-family:"Prompt","Arial Black",sans-serif;font-size:2em;font-weight:900;line-height:1.0625em;color:#557}#content-main{clear:both}#content-main #content-box{margin:2.0em}}#page-header{position:relative;z-index:30;clear:both;margin:0;background-color:#634464;color:#f6f3f4;font-family:"Prompt","Arial",sans-serif;font-weight:bold;letter-spacing:0.05em}#page-header #header-title{padding:0.125em 1.0em 0.125em 1.0em;font-family:"Prompt","Arial Black",sans-serif;font-size:1.5em}#page-header #navigation-search{position:relative;box-sizing:border-box;width:100%;border-bottom:0.125em solid #634464;padding:0;background-color:#fff;text-align:left;font-size:1.125em;margin:0.125em 0.125em 0 0}@media (min-width: 50em){#page-header #navigation-search{display:block !important}}#page-header #navigation-search button,#page-header #navigation-search input{box-sizing:border-box;margin:0;border:0;padding:0.25em;color:#464a4b;font-family:"Muli","Arial",sans-serif;font-weight:normal;text-align:left}#page-header #navigation-search input{height:2.1825em;width:85%;margin-left:5.0em;padding:0.25em 1.0em;background-color:#fff;border:0}#page-header #navigation-search button{box-sizing:border-box;background-color:#634464;border-right:2px solid #634464;padding:0.1875em 1.75em 0.1875em 1.75em;color:#f6f3f4;font-weight:bold;font-size:1.01em}@media (min-width: 50em){#page-header #navigation-search button{height:2.1675em;position:absolute;top:0;left:0}}#page-header #navigation-search button:hover{background-color:#5a315d}#page-header #header-nav{clear:both}#page-header #header-nav ul{list-style-type:none;padding:0;margin:0 0 0 1.25em}#page-header #header-nav ul li{display:inline;line-height:1.25em}#page-header #header-nav ul li a{display:inline-block;box-sizing:border-box;padding:0.5em 0.75em;font-size:0.875em}#page-header #header-nav ul li a:hover{text-decoration:underline}#page-header a,#page-header a:active,#page-header a:hover,#page-header a:link,#page-header a:visited{text-decoration:none;color:#f6f3f4}#page-header #google-translate-box{float:right;padding:0 1.0em 0.25em 1.0em}#page-header #google-translate-box a,#page-header #google-translate-box a:active,#page-header #google-translate-box a:hover,#page-header #google-translate-box a:link,#page-header #google-translate-box a:visited{text-decoration:none;color:#110f10}@media (max-width: 50em){div.mobile-only{display:block}span.mobile-only{display:inline}#page-header .fa{display:inline;display:inline-block}#page-header #header-title{margin:0 0 0 6.0em;padding:0 0.5em 0 1.375em;text-align:right;font-size:1.125em}#page-header #header-nav-toggle{display:block;position:absolute;top:0;left:0.25em;margin:0;padding:0;font-size:2em;text-decoration:none;color:#f6f3f4}#page-header #header-nav-toggle span{display:none}#page-header #header-nav-toggle a{display:inline-block;padding:0.375em 0.5em 0.5em 0.25em;border-right:1px solid #d1c7d0;border-right:1px solid rgba(246,243,244,0.75)}#page-header #header-nav{clear:both;margin-top:0}#page-header #header-nav #header-nav-body{box-sizing:border-box;margin-top:0}#page-header #header-nav #header-nav-body.mobile-hidden{position:absolute;top:0;left:-1000em}#page-header #header-nav #header-nav-body ul#header-nav-list{box-sizing:border-box;margin-top:0;margin-left:0;border-top:0.125em solid #f6f3f4;background-color:#634464}#page-header #header-nav #header-nav-body li{display:block;font-size:1.5em}#page-header #header-nav #header-nav-body li a{width:100%;border-bottom:1px solid #4c404c;padding-left:2.0em}#page-header #header-nav #header-nav-body li a:hover,#page-header #header-nav #header-nav-body li a:focus{text-decoration:none;background-color:#5a315d}#page-header #navigation-search{box-sizing:border-box;margin:0;font-size:1.5em}#page-header #navigation-search.mobile-hidden{position:absolute;top:0;left:-1000em}#page-header #navigation-search input{width:80%;margin-right:4.0em;margin-left:0}#page-header #navigation-search button{position:absolute;top:0;right:0;border-left:2px solid #eae3ee;border-right:0;font-size:1.0em}#page-header #navigation-search button:hover{background-color:#eae3ee;color:#110f10}#page-header #google-translate-box{float:none;text-align:right;padding-right:0.5em}}h1#first-el{position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;overflow:hidden;margin:-1px;border:0;padding:0}#title-box{margin:0;background-color:#f6f3f4;border-bottom:2px solid #634464;box-shadow:2px 2px 2px #ceccd5;box-shadow:2px 2px 2px rgba(85,85,119,0.25)}#title-box h1,#title-box h2.page-title{margin:0;padding:0.25em 0.5em 0.125em 0.5em;font-family:"Prompt","Arial Black",sans-serif;font-size:2.5em;font-weight:900;line-height:1.0625em;color:#557}#title-box.fixed-top{z-index:100}#title-box.fixed-top h1,#title-box.fixed-top h2.page-title,#title-box.fixed-top p.page-title{margin:0;padding:0.5em 0.5em 0.5em 0.75em;font-family:"Prompt","Arial Black",sans-serif;font-size:1.75em;line-height:1.0625em;color:#557}.fixed-above{margin-top:4.0em}@media (max-width: 64em){#title-box{clear:both}}#content-main #breadcrumb-box{padding:0.375em 0 0.25em 1.0em;background-color:#f6f3f4;color:#464a4b}#content-main #breadcrumb-box a{font-family:"Prompt","Arial",sans-serif;font-weight:bold;border:0}#content-main #breadcrumb-box a:hover{border-bottom:1px solid #25147e;border-bottom:1px solid rgba(32,17,136,0.85)}@media (max-width: 64em){#content-main #breadcrumb-box{border-top:1px solid #d1c7d0;border-top:1px solid rgba(99,68,100,0.25);border-bottom:1px solid #d1c7d0;border-bottom:1px solid rgba(99,68,100,0.25)}}pre{background-color:#e8e5e6;background-color:rgba(17,15,16,0.0625);border-left:.5em solid #bdbabb;border-left:.5em solid rgba(17,15,16,0.25);overflow:auto;color:#432546;padding:0.75em;font-family:"Source Code Pro",monospace;font-size:0.875em;line-height:1.75em}pre var{color:#4c404c;font-style:italic}code{font-family:"Source Code Pro",monospace;color:#432546}code var{color:#4c404c;font-style:italic}.center{text-align:center;margin-left:auto;margin-right:auto}.fleft{float:left;margin-right:1.0em}.fright{float:right;margin-left:1.0em}.clear-fix{clear:both}.clear-left{clear:left}.clear-right{clear:right}.fixed-top{position:fixed;top:0;left:0;width:100%}.fixed-bottom{position:fixed;bottom:0;left:0;width:100%}.mobile-only,.hide{display:none}.hidden{width:0;height:0;overflow:hidden}.toggleHide{display:none !important}.toggleShow{display:block !important}div.anchor,div.anchor:focus{outline:none}.anchor:before{display:block;position:relative;width:0;height:2.5em;margin-top:-2.5em;content:''}body.draft{font-family:"Short Stack","Arial",sans-serif}body.draft #page-header{font-family:"Walter Turncoat","Arial",sans-serif}body.draft #page-header #header-title{font-family:"Walter Turncoat","Arial Black",sans-serif}body.draft #title-box h1,body.draft #title-box h2.page-title{font-family:"Walter Turncoat","Arial Black",sans-serif}body.draft #content-main #breadcrumb-box a{font-family:"Walter Turncoat","Arial",sans-serif}body.draft #content-main h1,body.draft #content-main h2,body.draft #content-main h3,body.draft #content-main h4,body.draft #content-main h5,body.draft #content-main h6{font-family:"Walter Turncoat","Arial Black",sans-serif}body.draft pre,body.draft code{font-family:"Fira Mono","Source Code Pro",monospace}/*! -- Copyright (c) 2017-2018 Mootly Obviate -- See /LICENSE.md -------------- */

/*# sourceMappingURL=data:application/json;base64,ewoJInZlcnNpb24iOiAzLAoJImZpbGUiOiAiY29yZS5taW4uY3NzIiwKCSJzb3VyY2VzIjogWwoJCSJsaWIvY29yZS5zY3NzIiwKCQkibGliLzAxX2Z1bmNzL18wMV9zaXppbmcuc2NzcyIsCgkJImxpYi8wMl92YXJzL18wMV9jb2xvcnMuc2NzcyIsCgkJImxpYi8wMl92YXJzL18wMl9mb250cy5zY3NzIiwKCQkibGliLzAyX3ZhcnMvXzAzX3NpemVzLnNjc3MiLAoJCSJsaWIvMDJfdmFycy9fMTFfbWVkaWFRdWVyaWVzLnNjc3MiLAoJCSJsaWIvMDNfbWl4aW5zL18wMV9jb2xvckNvbWJvcy5zY3NzIiwKCQkibGliLzA0X3Jlc2V0L18wMV9jb3JlLnNjc3MiLAoJCSJsaWIvMDRfcmVzZXQvXzAyX3NlbWFudGljcy5zY3NzIiwKCQkibGliLzA0X3Jlc2V0L18wM19saW5rQ29udGVudC5zY3NzIiwKCQkibGliLzA0X3Jlc2V0L18wNF9mb3Jtcy5zY3NzIiwKCQkibGliLzA0X3Jlc2V0L18xMV9wcmludC5zY3NzIiwKCQkibGliLzA1X2xheW91dC9fMDBfYWNjZXNzaWJpbGl0eS5zY3NzIiwKCQkibGliLzA1X2xheW91dC9fMDFfY29yZS5zY3NzIiwKCQkibGliLzA1X2xheW91dC9fMDJfaGVhZGVyLnNjc3MiLAoJCSJsaWIvMDVfbGF5b3V0L18wNF90aXRsZS5zY3NzIiwKCQkibGliLzA1X2xheW91dC9fMDVfYnJlYWRjcnVtYi5zY3NzIiwKCQkibGliLzA2X3BhcnRzL18wM19jb2RlLnNjc3MiLAoJCSJsaWIvMDZfcGFydHMvXzMxX3V0aWxpdHlfY2xhc3Nlcy5zY3NzIiwKCQkibGliLzExX2N1c3RvbS9fMDFfYWx0RHJhZnQuc2NzcyIKCV0sCgkic291cmNlc0NvbnRlbnQiOiBbCgkJIi8vIEJFR0lOIENPUkUgQ1NTIEZJTEUgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKioqXG4vLyBOT1RFOiBUaGlzIGZpbGUgc2hvdWxkIGNvbnRhaW4gbm90aGluZyBidXQgaW1wb3J0IHN0YXRlbWVudHMuICAgICAgICAgICAgICAgICoqKlxuLy8gR0VORVJBTCBVU0UgTk9URVMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKioqXG4vLyBUaGVzZSBnZW5lcmFsIHJ1bGVzIGFyZSB0byBrZWVwIHRoZSBvdmVyYWxsIENTUyBhbmQgU0NTUyBjbGVhbi4gVGhleSBhcmUgICAgICoqKlxuLy8gb255IGluY2x1ZGVkIGluIHRoZSB0b3AgbGV2ZWwgc3R5bGUgc2hlZXQgZm9yIHRoaWUgc2l0ZS4gICAgICAgICAgICAgICAgICAgICAqKipcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKioqXG4vLyBUaGUgcHVycG9zZSBvZiBlYWNoIGZpbGU6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuLy8gQSBmaWxlIHNob3VsZCBiZSBlaXRoZXIgYW4gYWdncmVnYXRvciBvciBhIGNvbGxlY3Rpb24gb2YgcnVsZXMsIG5vdCBib3RoLiAgICAqKipcbi8vIElmIGEgcGFydGlhbCBpbmNsdWRlcyBydWxlcyBmcm9tIGFub3RoZXIgcGFydGlhbCwgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyBtYWtlIHN1cmUgdGhlIHNvdXJjZSBhcHBlYXJzIGZpcnN0IGluIHRoZSBwYXJlbnQgYWdncmVnYXRvci4gICAgICAgICAgICAgICAgICoqKlxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vIE9yZGVyIG9mIG9wZXJhdGlvbnM6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyAtIGV4dGVuZCAoc2hvdWxkbid0IHVzZSwgYnV0IGl0IGNvbWVzIGZpcnN0IGlmIHlvdSBkbykgICAgICAgICAgICAgICAgICAgICAgICoqKlxuLy8gLSBpbmNsdWRlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vIC0gc2ltcGxlIHNlbGVjdG9ycyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyAtICYgc2VsZWN0b3JzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuLy8gLSBuZXN0ZWQgc2VsZWN0b3JzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyBDb21tZW50IHVzYWdlOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuLy8gLSAvKiEgIC0gQWx3YXlzIGluY2x1ZGVkIGluIGNvbXBpbGUuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vIC0gLyoqICAtIEluY2x1ZGUgaW4gYW55IHN5c3RlbSBnZW5lcmF0ZWQgZG9jcyBhbmQgdmVyYm9zZSBDU1MgY29tcGlsZXMuICAgICAgKioqXG4vLyAgICAgICAgICBXZSBkb24ndCBnZW5lcmF0ZSBDU1MgZG9jcywgdGhpcyBpcyBqdXN0IGhlcmUgZnJvbSBjb21wbGV0ZW5lc3MuICAgICoqKlxuLy8gLSAvKiAgIC0gSW5jbHVkZWQgaW4gdmVyYm9zZSBDU1MgY29tcGlsZXMuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vIC0gLy8gICAtIEV4Y2x1ZGUgZnJvbSBldmVyeXRoaW5nIGJ1dCBzb3VyY2UuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyBGb3IgZXhhbXBsZSwgdGhpcyBibG9jayB1c2VzIHRoZSBkb3VibGUgc2xhc2ggc2luZ2xlIGxpbmUgY29tbWVudCBiZWNhdXNlICAgICoqKlxuLy8gdGhlcmUgaXMgbm8gcmVhc29uIGZvciBpdCB0byBhcHBlYXIgYW55d2hlcmUgYnV0IGluIHRoaXMgZmlsZS4gICAgICAgICAgICAgICAqKipcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKioqXG5cbi8vIDAxIEZ1bmN0aW9ucyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKioqXG5AaW1wb3J0IFwiMDFfZnVuY3MvMDFfc2l6aW5nXCI7XG4vLyAwMiBWYXJpYWJsZXMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuQGltcG9ydCBcIjAyX3ZhcnMvMDFfY29sb3JzXCI7XG5AaW1wb3J0IFwiMDJfdmFycy8wMl9mb250c1wiO1xuQGltcG9ydCBcIjAyX3ZhcnMvMDNfc2l6ZXNcIjtcbkBpbXBvcnQgXCIwMl92YXJzLzExX21lZGlhUXVlcmllc1wiO1xuLy8gMDMgTWl4aW5zICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcbkBpbXBvcnQgXCIwM19taXhpbnMvMDFfY29sb3JDb21ib3NcIjtcbi8vIEBpbXBvcnQgXCIwM19taXhpbnMvMDJfY29tbW9uRWxlbWVudHNcIjtcbi8vIDA0IFJlc2V0cyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKioqXG5AaW1wb3J0IFwiMDRfcmVzZXQvMDFfY29yZVwiO1xuQGltcG9ydCBcIjA0X3Jlc2V0LzAyX3NlbWFudGljc1wiO1xuQGltcG9ydCBcIjA0X3Jlc2V0LzAzX2xpbmtDb250ZW50XCI7XG5AaW1wb3J0IFwiMDRfcmVzZXQvMDRfZm9ybXNcIjtcbkBpbXBvcnQgXCIwNF9yZXNldC8xMV9wcmludFwiO1xuLy8gMDUgTGF5b3V0ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcbkBpbXBvcnQgXCIwNV9sYXlvdXQvMDBfYWNjZXNzaWJpbGl0eVwiO1xuQGltcG9ydCBcIjA1X2xheW91dC8wMV9jb3JlXCI7XG5AaW1wb3J0IFwiMDVfbGF5b3V0LzAyX2hlYWRlclwiO1xuQGltcG9ydCBcIjA1X2xheW91dC8wNF90aXRsZVwiO1xuQGltcG9ydCBcIjA1X2xheW91dC8wNV9icmVhZGNydW1iXCI7XG4vLyAwNiBQYXJ0cyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuQGltcG9ydCBcIjA2X3BhcnRzLzAzX2NvZGVcIjtcbkBpbXBvcnQgXCIwNl9wYXJ0cy8zMV91dGlsaXR5X2NsYXNzZXNcIjtcbi8vIDExIEN1c3RvbSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKioqXG5AaW1wb3J0IFwiMTFfY3VzdG9tLzAxX2FsdERyYWZ0XCI7XG4vKiEgLS0gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggTW9vdGx5IE9idmlhdGUgLS0gU2VlIC9MSUNFTlNFLm1kIC0tLS0tLS0tLS0tLS0tICovXG4iLAoJCSIvLyAwMiBGdW5jdGlvbnMgLSAwMSBTaXppbmcgZnVuY3Rpb25zID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICoqKlxuLy8gRnVuY3Rpb25zIHRvIHNjYWxlIGFuZCBzaXplOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gY2FsY3VsYXRlIGNvbHVtbiB3aWR0aHMgb24gdGhlIHBhZ2UgICAgICAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZSBkZWZhdWx0IGFzc3VtZXMgYSAxMiBjb2x1bW4gbGF5b3V0ICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAzJSBpcyBzdWJ0cmFjdGVkIGZyb20gYWxsIGNvbHVtbnMgdG8gYXZvaWQgYnVtcHMgICAgICAgICAqKipcbkBmdW5jdGlvbiBjYWxjLWNvbHVtbi13aWR0aCgkZnhfbnVtLCAkZnhfY291bnQ6IDEyKSB7XG4gIEByZXR1cm4gJGZ4X251bSAqICgxMDAlIC8gJGZ4X2NvdW50KSAtIDM7XG59XG4gICAgICAgICAgICAgICAgICAgIC8vIHBpeGVscyB0byBlbXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBUaGUgZGVmYXVsdCBhc3N1bWVzIGEgMTZweCBmb250IHNpemUgICAgICAgICAgICAgICAgICAgICAqKipcbkBmdW5jdGlvbiBweDJlbXMoJGZ4X251bSwgJGZ4X2NvdW50OiAxNikge1xuICBAcmV0dXJuICgkZnhfbnVtIC8gJGZ4X2NvdW50KSAqIDEuMGVtIDtcbn1cblxuLy8gLS0tIENvcHlyaWdodCAoYykgMjAxNy0yMDE4IE1vb3RseSBPYnZpYXRlIC0gU2VlIC9MSUNFTlNFLm1kIC0tLS0tLS0tLS0tLS0tLSAqKipcbiIsCgkJIlxuLy8gMDIgVmFyaWFibGVzIC0gMDEgQ29sb3JzID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSBOYW1lc3BhY2U6IGMtID09PSAqKipcbi8vIEFsbCBjb2xvcnMgc2hvdWxkIGJlIGRlZmluZWQgaW4gYW5kIHJlZmVyZW5jZWQgZnJvbSB0aGlzIGZpbGUuICAgICAgICAgICAgICAgKioqXG4vLyBUaGUgaW1wb3J0YW50IGJpdHMgYXJlIGF0IHRoZSBib3R0b20uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuLy8gLS0tLS0tLS0tLS0tLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vIFRoaXMgZmlsZSBzaG91bGQgY29udGFpbiBvbmx5IHZhcmlhYmxlIGFzc2lnbm1lbnRzLiAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyBBbnkgQ1NTIGhlcmUgbWF5IGJlIG92ZXJyaWRlbiBpbiB0aGUgcmVzZXRzLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcblxuLy8gQkFTSUMgQ09MT1JTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcbi8vIEp1c3Qgc29tZSBiYXNpYyBjb2xvcnMgc28gdGhleSBhcmUgcHJlZGVmaW5lZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuLy8gUHJpbWFyaWVzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcbiRjLXdoaXRlICAgICAgICAgICAgOiByZ2IoMjU1LDI1NSwyNTUpOyAgICAgICAgICAgICAgICAgICAgIC8vICNmZmZmZmZcbiRjLWJsYWNrICAgICAgICAgICAgOiByZ2IoMCwwLDApOyAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICMwMDAwMDBcbiRjLXJlZCAgICAgICAgICAgICAgOiByZ2IoMjU1LDAsMCk7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vICNmZjAwMDBcbiRjLWdyZWVuICAgICAgICAgICAgOiByZ2IoMCwyNTUsMCk7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vICMwMGZmMDBcbiRjLWJsdWUgICAgICAgICAgICAgOiByZ2IoMCwwLDI1NSk7ICAgICAgICAgICAgICAgICAgICAgICAgIC8vICMwMDAwZmZcbiRjLXllbGxvdyAgICAgICAgICAgOiByZ2IoMjU1LDI1NSwwKTsgICAgICAgICAgICAgICAgICAgICAgIC8vICNmZmZmMDBcbiRjLWN5YW4gICAgICAgICAgICAgOiByZ2IoMCwyNTUsMjU1KTsgICAgICAgICAgICAgICAgICAgICAgIC8vICMwMGZmZmZcbiRjLW1hZ2VudGEgICAgICAgICAgOiByZ2IoMjU1LDAsMjU1KTsgICAgICAgICAgICAgICAgICAgICAgIC8vICNmZjAwZmZcbi8vIEdyYXlzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKioqXG4kYy1ncmF5LWNoYXJjb2FsICAgIDogcmdiKDMyLDM2LDM3KTsgICAgICAgICAgICAgICAgICAgICAgICAvLyAjMjAyNDI1XG4kYy1ncmF5LWRhcmsgICAgICAgIDogcmdiKDcwLDc0LDc1KTsgICAgICAgICAgICAgICAgICAgICAgICAvLyAjNDY0YTRiXG4kYy1ncmF5LW1lZGl1bSAgICAgIDogcmdiKDE0MCwxNDUsMTQ3KTsgICAgICAgICAgICAgICAgICAgICAvLyAjOGM5MTkzXG4kYy1vZmZ3aGl0ZSAgICAgICAgIDogcmdiKDI0NiwyNDMsMjQ0KTsgICAgICAgICAgICAgICAgICAgICAvLyAjZjlmMmYzXG4vLyBDb21tb24gQ29sb3JzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuJGMtZGVmYXVsdC1yZWQgICAgICA6IGRhcmtlbigkYy1yZWQsIDEwJSk7ICAgICAgICAgICAgICAgICAgLy8gI2NjMDAwMFxuJGMtZGVmYXVsdC1ncmVlbiAgICA6IGRhcmtlbigkYy1ncmVlbiwgMjAlKTsgICAgICAgICAgICAgICAgLy8gIzAwOTkwMFxuLy8gRU5EIEJBU0lDIENPTE9SUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcblxuLy8gVEVNUExBVEUgQ09MT1JTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcbi8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKioqXG4kYy1iYXNlLWJsYWNrICAgICAgIDogcmdiKDE3LDE1LDE2KTsgICAgICAgICAgICAgICAgICAgICAgICAvLyAjMTEwZjEwXG4kYy1iYXNlLWRrZ3JheSAgICAgIDogcmdiKDQzLDQwLDQzKTsgICAgICAgICAgICAgICAgICAgICAgICAvLyAjMmIyODJiXG4kYy1iYXNlLW1lZGdyYXkgICAgIDogcmdiKDc2LDY0LDc2KTsgICAgICAgICAgICAgICAgICAgICAgICAvLyAjNGM0MDRjXG4kYy1iYXNlLWx0Z3JheSAgICAgIDogcmdiKDE2MiwxNDgsMTYyKTsgICAgICAgICAgICAgICAgICAgICAvLyAjYTI5NGEyXG4kYy1iYXNlLWdyYXl3YXNoICAgIDogcmdiKDIyMSwyMTUsMjIxKTsgICAgICAgICAgICAgICAgICAgICAvLyAjZGRkN2RkXG4kYy1iYXNlLXBsdW13YXNoICA6IHJnYigyMzQsMjI3LDIzOCk7ICAgICAgICAgICAgICAgICAgICAgLy8gI2VhZTNlZlxuJGMtYmFzZS1ncmF5d2FzaCAgICA6IHJnYigyNDAsMjQwLDIzOCk7ICAgICAgICAgICAgICAgICAgICAgLy8gI2YwZjBlZVxuJGMtYmFzZS1saW1ld2FzaCAgICA6IHJnYigyMzgsMjU1LDIzOCk7ICAgICAgICAgICAgICAgICAgICAgLy8gI2VlZmZlZVxuXG4kYy1iYXNlLWRrcmVkICAgICAgIDogcmdiKDM0LDAsMCk7ICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAjMjIwMDAwXG4kYy1iYXNlLXJlZCAgICAgICAgIDogcmdiKDE1MywzNCwzNCk7ICAgICAgICAgICAgICAgICAgICAgICAvLyAjOTkyMjIyXG4kYy1iYXNlLXBpbmsgICAgICAgIDogcmdiKDI0MiwxMjEsMTIxKTsgICAgICAgICAgICAgICAgICAgICAvLyAjZjI3OTc5XG4kYy1iYXNlLXBhbGVyb3NlICAgIDogcmdiKDIxNiwxNzMsMTczKTsgICAgICAgICAgICAgICAgICAgICAvLyAjZDhhZGFkXG4kYy1iYXNlLXRhbiAgICAgICAgIDogcmdiKDI0MiwyNDIsMjE4KTsgICAgICAgICAgICAgICAgICAgICAvLyAjZjJkYWRhXG5cbiRjLWJhc2UtYmx1ZSAgICAgICAgOiByZ2IoMzIsMTcsMTM2KTsgICAgICAgICAgICAgICAgICAgICAgIC8vICMyMDExODhcbiRjLWJhc2Utc2xhdGUgICAgICAgOiByZ2IoODUsODUsMTE5KTsgICAgICAgICAgICAgICAgICAgICAgIC8vICM1NTU1NzdcbiRjLWJhc2UtbHRzbGF0ZSAgICAgOiByZ2IoMTg3LDE4NywyMjEpOyAgICAgICAgICAgICAgICAgICAgIC8vICNiYmJiZGRcblxuJGMtYmFzZS1wbHVtICAgICAgICA6IHJnYigxMTIsNjEsMTE2KTsgICAgICAgICAgICAgICAgICAgICAgLy8gIzcwM2Q3NFxuJGMtYmFzZS1ka3BsdW0gICAgICA6IHJnYig2NywzNyw3MCk7ICAgICAgICAgICAgICAgICAgICAgICAgLy8gIzQzMjU0NlxuJGMtYmFzZS1tZWRwbHVtICAgICA6IHJnYig5MCw0OSw5Myk7ICAgICAgICAgICAgICAgICAgICAgICAgLy8gIzVhMzE1ZFxuJGMtYmFzZS1mbGF0cGx1bSAgICA6IHJnYig5OSw2OCwxMDApOyAgICAgICAgICAgICAgICAgICAgICAgLy8gIzY0NDU2NFxuXG4vLyBDT01QT05FTlQgQ09MT1JTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gQmFzZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4kYy1iYXNlLXRleHQgICAgICAgIDogJGMtYmFzZS1ibGFjaztcbiRjLWJhc2UtYmcgICAgICAgICAgOiAkYy1vZmZ3aGl0ZTtcbiRjLWludmVyc2UtdGV4dCAgICAgOiAkYy1vZmZ3aGl0ZTtcbiRjLWludmVyc2UtYmcgICAgICAgOiAkYy1iYXNlLWJsYWNrO1xuJGMtYmFubmVyLXRleHQgICAgICA6ICRjLW9mZndoaXRlO1xuJGMtYmFubmVyLWJnICAgICAgICA6ICRjLWJhc2UtZmxhdHBsdW07XG4kYy1mb290ZXItdGV4dCAgICAgIDogJGMtb2Zmd2hpdGU7XG4kYy1mb290ZXItYmcgICAgICAgIDogJGMtYmFzZS1ka3BsdW07XG4kYy1zdXZiYW5uZXItYmcgICAgIDogJGMtYmFzZS1tZWRwbHVtO1xuJGMtc2VsZWN0ZWQtYmcgICAgICA6ICRjLWJhc2UtbWVkcGx1bTtcbiAgICAgICAgICAgICAgICAgICAgLy8gQm94ZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4kYy1ib3gtdGV4dCAgICAgICAgIDogJGMtYmFzZS1ibGFjaztcbiRjLWJveC1iZyAgICAgICAgICAgOiAkYy1iYXNlLXBsdW13YXNoO1xuJGMtZGFyay1ib3gtdGV4dCAgICA6ICRjLW9mZndoaXRlO1xuJGMtZGFyay1ib3gtYmcgICAgICA6ICRjLWdyYXktZGFyaztcbiRjLWdyYXktYm9yZGVyICAgICAgOiAkYy1ncmF5LWRhcms7XG4kYy1sdGdyYXktYm9yZGVyICAgIDogJGMtYmFzZS1tZWRncmF5O1xuJGMtZ3JheS10ZXh0ICAgICAgICA6ICRjLWJhc2UtbWVkZ3JheTtcbiRjLWNvZGUgICAgICAgICAgICAgOiAkYy1iYXNlLWRrcGx1bTtcbiAgICAgICAgICAgICAgICAgICAgLy8gQnV0dG9ucyBhbmQgbGlua3MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4kYy1idXR0b24tdGV4dCAgICAgIDogJGMtb2Zmd2hpdGU7XG4kYy1idXR0b24tYmcgICAgICAgIDogJGMtYmFzZS1ka3BsdW07XG4kYy1idXR0b24tYWN0aXZlLWJnIDogJGMtYmFzZS1tZWRwbHVtO1xuJGMtbGlua3MtdGV4dCAgICAgICA6ICRjLWJhc2UtYmx1ZTtcbiRjLWhvdmVyLXRleHQgICAgICAgOiAkYy1iYXNlLWJsdWU7XG4kYy12aXNpdGVkLXRleHQgICAgIDogJGMtYmFzZS1ibHVlO1xuJGMtaDEtdGV4dCAgICAgICAgICA6ICRjLWJhc2Utc2xhdGU7XG4kYy1oMi10ZXh0ICAgICAgICAgIDogbWl4KCRjLWJhc2Utc2xhdGUsICRjLWJhc2UtYmxhY2ssIDk1KTtcbiRjLWgzLXRleHQgICAgICAgICAgOiBtaXgoJGMtYmFzZS1zbGF0ZSwgJGMtYmFzZS1ibGFjaywgOTApO1xuJGMtaDQtdGV4dCAgICAgICAgICA6IG1peCgkYy1iYXNlLXNsYXRlLCAkYy1iYXNlLWJsYWNrLCA4NSk7XG4kYy1oNS10ZXh0ICAgICAgICAgIDogbWl4KCRjLWJhc2Utc2xhdGUsICRjLWJhc2UtYmxhY2ssIDgwKTtcbiRjLWg2LXRleHQgICAgICAgICAgOiBtaXgoJGMtYmFzZS1zbGF0ZSwgJGMtYmFzZS1ibGFjaywgNzUpO1xuXG4vLyBDYWxsb3V0cyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuJGMtaGlsaXRlLXllbGxvdyAgICA6IHJnYmEoJGMteWVsbG93LDAuOCk7XG4kYy1oaWxpdGUtZ3JheSAgICAgIDogcmdiYSgkYy1iYXNlLWx0Z3JheSwwLjUpO1xuXG4kYy1yZXNwb25zZS1ubyAgICAgIDogJGMtZGVmYXVsdC1yZWQ7XG4kYy1yZXNwb25zZS15ZXMgICAgIDogJGMtZGVmYXVsdC1ncmVlbjtcbi8vIC0tLSBDb3B5cmlnaHQgKGMpIDIwMTctMjAxOCBNb290bHkgT2J2aWF0ZSAtIFNlZSAvTElDRU5TRS5tZCAtLS0tLS0tLS0tLS0tLS0gKioqXG4iLAoJCSIvLyAwMSBWYXJpYWJsZXMgLSAwMiBGb250cyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICoqKlxuLy8gVGhpcyBmaWxlIHNob3VsZCBjb250YWluIG9ubHkgdmFyaWFibGUgYXNzaWdubWVudHMuICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vIEFueSBDU1MgaGVyZSBtYXkgYmUgb3ZlcnJpZGVuIGluIHRoZSByZXNldHMuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG5cbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TXVsaTo0MDAsNjAwLDcwMCcpO1xuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Qcm9tcHQ6NDAwLDYwMCw3MDAsOTAwJyk7XG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVNvdXJjZStDb2RlK1BybycpO1xuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1XYWx0ZXIrVHVybmNvYXQnKTtcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9U2hvcnQrU3RhY2snKTtcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9RmlyYStNb25vOjQwMCw3MDAmc3Vic2V0PWxhdGluLWV4dCcpO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIHN0YW5kYXJkIGRlZmF1bHRzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuJGYtZGVmYXVsdCAgICAgICAgICA6ICdNdWxpJywgJ0FyaWFsJywgc2Fucy1zZXJpZjtcbiRmLXRpdGxlICAgICAgICAgICAgOiAnUHJvbXB0JywgJ0FyaWFsIEJsYWNrJywgc2Fucy1zZXJpZjtcbiRmLW5hdiAgICAgICAgICAgICAgOiAnUHJvbXB0JywgJ0FyaWFsJywgc2Fucy1zZXJpZjtcbiRmLWNvZGUgICAgICAgICAgICAgOiAnU291cmNlIENvZGUgUHJvJywgbW9ub3NwYWNlO1xuICAgICAgICAgICAgICAgICAgICAvLyBhbHRlcm5hdGUgZGVmYXVsdHMgKHVzZSBjbGFzcyAnZHJhZnQnIGluIHRoZSBib2R5KSAgICAgICAqKipcbiRmLWRyYWZ0LWRlZmF1bHQgICAgOiAnU2hvcnQgU3RhY2snLCAnQXJpYWwnLCBzYW5zLXNlcmlmO1xuJGYtZHJhZnQtdGl0bGUgICAgICA6ICdXYWx0ZXIgVHVybmNvYXQnLCAnQXJpYWwgQmxhY2snLCBzYW5zLXNlcmlmO1xuJGYtZHJhZnQtbmF2ICAgICAgICA6ICdXYWx0ZXIgVHVybmNvYXQnLCAnQXJpYWwnLCBzYW5zLXNlcmlmO1xuJGYtZHJhZnQtY29kZSAgICAgICA6ICdGaXJhIE1vbm8nLCAnU291cmNlIENvZGUgUHJvJywgbW9ub3NwYWNlO1xuLy8gLS0tIENvcHlyaWdodCAoYykgMjAxNy0yMDE4IE1vb3RseSBPYnZpYXRlIC0gU2VlIC9MSUNFTlNFLm1kIC0tLS0tLS0tLS0tLS0tLSAqKipcbiIsCgkJIi8vIDAxIFZhcmlhYmxlcyAtIDAzIFNpemVzID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKioqXG4vLyBBbGwgdGhvc2UgZGlmZmVyZW50IHRoaW5ncyB0aGF0IG5lZWQgdG8gYmUgc2l6ZWQuICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuLy8gLS0tLS0tLS0tLS0tLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vIFRoaXMgZmlsZSBzaG91bGQgY29udGFpbiBvbmx5IHZhcmlhYmxlIGFzc2lnbm1lbnRzLiAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyBBbnkgQ1NTIGhlcmUgbWF5IGJlIG92ZXJyaWRlbiBpbiB0aGUgcmVzZXRzLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBTdGF0ZSBmb290ZXIgY2FwcGVkIGF0IDc4ZW0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiRtYXgtY29udGVudC13aWR0aCAgOlx0NjBlbTsgICAgICAgICAgICAgLy8gOTYwcHggQCAxNmVtXG4gICAgICAgICAgICAgICAgICAgIC8vIEZvbnQgc2l6ZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBieSBwaXhlbCBjaGFuZ2Ugb24gYSBiYXNlIDIwcHggZm9udCAgICAgICAgICAgICAgICAgICAgICAqKipcbiRmLXNpemUtZGVmYXVsdCAgICAgOiBweDJlbXMoMTYpO1xuICAgICAgICAgICAgICAgICAgICAvLyBIZWFkaW5ncyBzdGVwIEAgMS4yZW0gKG1pbm9yIHRoaXJkIHNjYWxlKSAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gb2ZmaWNpYWxseSAxLjIsIDEuNDQsIDEuNzI3LCAyLjA3NCAgICAgICAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIGJ1dCBhZGp1c3RlZCBmb3Igd2hvbGUgcGl4ZWxzIHN0ZXBzICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBhc3N1bWluZyBhIDE2cHggYmFzZSBmb250ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiRoMS1zaXplICAgICAgICAgICAgOiBweDJlbXMoNDApO1xuJGgxLW1vYi1zaXplICAgICAgICA6IHB4MmVtcygzMik7XG4kaDItc2l6ZSAgICAgICAgICAgIDogcHgyZW1zKDMyKTtcbiRoMy1zaXplICAgICAgICAgICAgOiBweDJlbXMoMjgpO1xuJGg0LXNpemUgICAgICAgICAgICA6IHB4MmVtcygyMik7XG4kaDUtc2l6ZSAgICAgICAgICAgIDogcHgyZW1zKDE5KTtcbiRoNi1zaXplICAgICAgICAgICAgOiBweDJlbXMoMTcpO1xuJGhiLXNpemUgICAgICAgICAgICA6IHB4MmVtcygyNCk7XG4kaGItbW9iLXNpemUgICAgICAgIDogcHgyZW1zKDE4KTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBsaW5lIGhlaWdodHMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiRodC1saW5lLWNvbXBhY3QgICAgOiBweDJlbXMoMTcpO1xuJGh0LWxpbmUtZGVmYXVsdCAgICA6IHB4MmVtcygyMik7XG4kaHQtbGluZS1tZWQgICAgICAgIDogcHgyZW1zKDI0KTtcbiRodC1saW5lLXRhbGwgICAgICAgOiBweDJlbXMoMjgpO1xuJGh0LWxpbmUtZGJsICAgICAgICA6IHB4MmVtcygzMik7XG5cbiRodC1saW5lLWhlYWRpbmcgICAgOiBweDJlbXMoMTgpO1xuJGh0LWxpbmUtc2VsZWN0ICAgICA6IHB4MmVtcygyNCk7XG4vLyAtLS0gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggTW9vdGx5IE9idmlhdGUgLSBTZWUgL0xJQ0VOU0UubWQgLS0tLS0tLS0tLS0tLS0tICoqKlxuIiwKCQkiLy8gMDEgVmFyaWFibGVzIC0gMTEgTWVkaWEgUXVlcmllcyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqKipcbi8vIFRoaXMgZmlsZSBzaG91bGQgY29udGFpbiBvbmx5IHZhcmlhYmxlIGFzc2lnbm1lbnRzLiAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyBBbnkgQ1NTIGhlcmUgbWF5IGJlIG92ZXJyaWRlbiBpbiB0aGUgcmVzZXRzLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBkZXZpY2UgYnJlYWtvdXRzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiRicmVha1NtYWxsUGhvbmUgICAgOlx0MjBlbTsgICAgICAgICAgICAgLy8gMzIwcHhcbiRicmVha1Bob25lICAgICAgICAgOlx0MzBlbTsgICAgICAgICAgICAgLy8gNDgwcHhcbiRicmVha1Bob25lQWx0ICAgICAgOlx0MzVlbTsgICAgICAgICAgICAgLy8gNTYwcHhcbiRicmVha1RhYmxldCAgICAgICAgOlx0NTBlbTsgICAgICAgICAgICAgLy8gODAwcHhcbiRicmVha0Rlc2t0b3AgICAgICAgOlx0NjRlbTsgICAgICAgICAgICAgLy8gMTAyNHB4XG4gICAgICAgICAgICAgICAgICAgIC8vIG5vdCB1c2VkIGJ1dCBoZXJlIGZvciBjb21wbGV0ZW5lc3MgICAgICAgICAgICAgICAgICAgICAgICoqKlxuJG9sZGVyU2NyZWVuICAgICAgICA6IDgwZW07ICAgICAgICAgICAgIC8vIDEyODBweFxuJHR5cGljYWxTY3JlZW4gICAgICA6XHQ4NWVtOyAgICAgICAgICAgICAvLyAxMzYwcHhcbiRicmVha0hpUmVzICAgICAgICAgOlx0OTBlbTsgICAgICAgICAgICAgLy8gMTQ0MHB4XG4kYnJlYWtSZXRpbmEgICAgICAgIDogMTAwZW07ICAgICAgICAgICAgLy8gMTYwMHB4XG4vLyAtLS0gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggTW9vdGx5IE9idmlhdGUgLSBTZWUgL0xJQ0VOU0UubWQgLS0tLS0tLS0tLS0tLS0tICoqKlxuIiwKCQkiLy8gMDMgTWl4aW5zIC0gMDEgQ29sb3IgQ29tYmluYXRpb25zID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqKipcbi8vIEZvciBjb25zaXN0ZW5jeSwgYWxsIGludGVybmFsIHZhcmlhYmxlcyBhcmUgcHJlZml4ZWQgd2l0aCBcIm14XCIgICAgICAgICAgICAgICAqKipcbi8vIC0tLS0tLS0tLS0tLS0tLS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyBUaGlzIGZpbGUgc2hvdWxkIGNvbnRhaW4gb25seSBtaXhpbiBjYWxscy4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuLy8gQW55IENTUyBoZXJlIG1heSBiZSBvdmVycmlkZW4gaW4gdGhlIHJlc2V0cy4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgYXJlIGZyZXF1ZW50bHkgdXNlZCBjb2xvciBjb21iaW50YXRpb25zLCAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIHRvIGFsbG93IHNwZWVkaWVyIHJlYnJhbmRpbmcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBUaGUgZGVmYXVsdCBjb2xvciBzZXQgZm9yIGNvbnRlbnQgcGFnZXMgICAgICAgICAgICAgICAgICAqKipcbkBtaXhpbiBzZXQtZGVmYXVsdC1jb2xvcnMge1xuICBjb2xvciAgICAgICAgICAgICA6ICRjLWJhc2UtdGV4dDtcbiAgYmFja2dyb3VuZC1jb2xvciAgOiAkYy1iYXNlLWJnO1xufVxuICAgICAgICAgICAgICAgICAgICAvLyBCYW5uZXIgY29sb3JzIC0gc28gd2UgY2FuIG1hdGNoIHRoaW5ncyB0byB0aGVtICAgICAgICAgICAqKipcbkBtaXhpbiBzZXQtYmFubmVyLWNvbG9ycyB7XG4gIGNvbG9yICAgICAgICAgICAgIDokYy1pbnZlcnNlLXRleHQ7XG4gIGJhY2tncm91bmQtY29sb3IgIDogJGMtYmFubmVyLWJnIDtcbn1cbkBtaXhpbiBzZXQtZm9vdGVyLWNvbG9ycyB7XG4gIGNvbG9yICAgICAgICAgICAgIDogJGMtYmFzZS10ZXh0O1xuICBiYWNrZ3JvdW5kLWNvbG9yICA6ICRjLXB1cnBsZS13ZWItMjtcbn1cbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGludmVydGVkIGNvbG9yIHNldCBmb3IgdGhlIGFkbWluIGJhciAgICAgICAgICAgICAgICAgKioqXG5AbWl4aW4gc2V0LWludmVydGVkLWNvbG9ycyB7XG4gIGNvbG9yICAgICAgICAgICAgIDogJGMtaW52ZXJzZS10ZXh0O1xuICBiYWNrZ3JvdW5kLWNvbG9yICA6ICRjLWludmVyc2UtYmc7XG59XG4vLyBCbGVuZGVkIGNvbG9yIHJ1bGVzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuLy8gRWFjaCByZXR1cm5zIHR3byBjb2xvciBydWxlcyBpbiB0aGlzIG9yZGVyOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vIDEpIGEgZmxhdCBibGVuZGVkIGNvbG9yIHJ1bGUgZm9yIGJyb3dzZXJzIHRoYXQgZG8gbm90IHVuZGVyc3RhbmQgcmdiYSgpICAgICAgKioqXG4vLyAyKSBhbiByZ2JhKCkgZm9yIGJyb3dzZXJzIHRoYXQgdW5kZXJzdGFuZCByZ2JhKCkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuLy8gVGhlIHR3byBjb2xvciBydWxlcyB3aWxsIG5vdCBiZSBhIHBlcmZlY3QgbWF0Y2ggYnV0IHdpbGwgYmUgY2xvc2UuICAgICAgICAgICAqKipcbi8vIEVhY2ggZGVmYXVsdHMgdG8gZG9pbmcgbm90aGluZyBidXQgcmVwZWF0aW5nIHRoZSBwcm92aWRlZCBjb2xvci4gICAgICAgICAgICAgKioqXG5cbiAgICAgICAgICAgICAgICAgICAgLy8gQmxlbmRlZCBjb2xvciBydWxlcyBmb3IgdGV4dCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICRteGNvbG9yOiAgICAgICAgYm9yZGVyIGNvbG9yLCBvbmx5IHJlcXVpcmVkIHZhbHVlICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAkbXhhbHBoYTogICAgICAgIDAuMCAtIDEuMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gJG14Ymdjb2xvcjogICAgICBiYWNrZ3JvdW5kIGNvbG9yIHRvIGNyZWF0ZSBtaXggICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCByZ2JhICAgICoqKlxuQG1peGluIHNldC1ibGVuZGVkLXRleHQoJG14Y29sb3IsICRteGFscGhhOiAxLjAsICRteGJnLWNvbG9yOiAkbXhjb2xvcikge1xuICAkbXh3ZWlnaHQgICAgICAgICA6IDEwMCokbXhhbHBoYTtcbiAgY29sb3IgICAgICAgICAgICAgOiBtaXgoJG14Y29sb3IsICRteGJnLWNvbG9yLCAkbXh3ZWlnaHQpO1xuICBjb2xvciAgICAgICAgICAgICA6IHJnYmEoJG14Y29sb3IsICRteGFscGhhKTtcbn1cbiAgICAgICAgICAgICAgICAgICAgLy8gQmxlbmRlZCBjb2xvciBydWxlcyBmb3IgYmFja2dyb3VuZHMgICAgICAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICRteGNvbG9yOiAgICAgICAgYm9yZGVyIGNvbG9yLCBvbmx5IHJlcXVpcmVkIHZhbHVlICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAkbXhhbHBoYTogICAgICAgIDAuMCAtIDEuMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gJG14Ymdjb2xvcjogICAgICBiYWNrZ3JvdW5kIGNvbG9yIHRvIGNyZWF0ZSBtaXggICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCByZ2JhICAgICoqKlxuQG1peGluIHNldC1ibGVuZGVkLWJhY2tncm91bmQoJG14Y29sb3IsICRteGFscGhhOiAxLjAsICRteGJnLWNvbG9yOiAkbXhjb2xvcikge1xuICAkbXh3ZWlnaHQgICAgICAgICA6IDEwMCokbXhhbHBoYTtcbiAgYmFja2dyb3VuZC1jb2xvciAgOiBtaXgoJG14Y29sb3IsICRteGJnLWNvbG9yLCAkbXh3ZWlnaHQpO1xuICBiYWNrZ3JvdW5kLWNvbG9yICA6IHJnYmEoJG14Y29sb3IsICRteGFscGhhKTtcbn1cbiAgICAgICAgICAgICAgICAgICAgLy8gU2FtZSBhcyBhYm92ZSB3aXRob3V0IFJCR0EsIHVzZWZ1bCB0byBvdmVyY29tZSBuZXN0aW5nICAgKioqXG5AbWl4aW4gc2V0LWJsZW5kZWQtYmFja2dyb3VuZC1zaW1wbGUoJG14Y29sb3IsICRteGFscGhhOiAxLjAsICRteGJnLWNvbG9yOiAkbXhjb2xvcikge1xuICAkbXh3ZWlnaHQgICAgICAgICA6IDEwMCokbXhhbHBoYTtcbiAgYmFja2dyb3VuZC1jb2xvciAgOiBtaXgoJG14Y29sb3IsICRteGJnLWNvbG9yLCAkbXh3ZWlnaHQpO1xufVxuICAgICAgICAgICAgICAgICAgICAvLyBCbGVuZGVkIGNvbG9yIHJ1bGUgZm9yIGJvcmRlcnMgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gRGVmYXVsdCBpcyAgICAgICBib3JkZXI6IDFweCBzb2xpZCBjb2xvciAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICRteGNvbG9yOiAgICAgICAgYm9yZGVyIGNvbG9yLCBvbmx5IHJlcXVpcmVkIHZhbHVlICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAkbXhzaWRlOiAgICAgICAgIGFsbCwgbGVmdCwgcmlnaHQsIHRvcCwgYm90dG9tICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gJG14YWxwaGE6ICAgICAgICAwLjAgLSAxLjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICRteHNpemU6ICAgICAgICAgYW55IHZhbGlkIHdpZHRoIHVuaXQgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAkbXh0eXBlOiAgICAgICAgIGFzIHBlciBDU1MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gJG14Ymdjb2xvcjogICAgICBiYWNrZ3JvdW5kIGNvbG9yIHRvIGNyZWF0ZSBtaXggICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCByZ2JhICAgICoqKlxuQG1peGluIHNldC1ibGVuZGVkLWJvcmRlcigkbXhjb2xvciwgJG14c2lkZTogYWxsLCAkbXhhbHBoYTogMS4wLCAkbXhzaXplOiAxcHgsICRteHR5cGU6IHNvbGlkLCAkbXhiZy1jb2xvcjogJG14Y29sb3IpIHtcbiAgJG14d2VpZ2h0ICAgICAgICAgOiAxMDAqJG14YWxwaGE7XG4gIEBpZiAkbXhzaWRlID09IGFsbCB7XG4gICAgYm9yZGVyOiAkbXhzaXplICRteHR5cGUgbWl4KCRteGNvbG9yLCAkbXhiZy1jb2xvciwgJG14d2VpZ2h0KTtcbiAgICBAaWYgJG14YWxwaGEgIT0gMS4wIHsgYm9yZGVyOiAkbXhzaXplICRteHR5cGUgcmdiYSgkbXhjb2xvciwgJG14YWxwaGEpOyB9XG4gIH0gQGVsc2Uge1xuICAgIGJvcmRlci0jeyRteHNpZGV9OiAkbXhzaXplICRteHR5cGUgbWl4KCRteGNvbG9yLCAkbXhiZy1jb2xvciwgJG14d2VpZ2h0KTtcbiAgICBAaWYgJG14YWxwaGEgIT0gMS4wIHsgYm9yZGVyLSN7JG14c2lkZX06ICRteHNpemUgJG14dHlwZSByZ2JhKCRteGNvbG9yLCAkbXhhbHBoYSk7IH1cbiAgfVxufVxuICAgICAgICAgICAgICAgICAgICAvLyBCbGVuZGVkIGNvbG9yIHJ1bGVzIGZvciB0ZXh0IGRyb3Agc2hhZG93cyAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gJG14eHBvczogICAgICAgICBob3Jpem9udGFsIG9mZnNldCBvZiB0aGUgc2hhZG93ICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICRteHlwb3M6ICAgICAgICAgdmVydGljYWwgb2Zmc2V0IG9mIHRoZSBzaGFkb3cgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAkbXhjb2xvcjogICAgICAgIHRleHQgY29sb3Igb3Igc3RhcnRlciBjb2xvciAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gJG14YWxwaGE6ICAgICAgICAwLjAgLSAxLjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICRteGJnY29sb3I6ICAgICAgYmFja2dyb3VuZCBjb2xvciB0byBjcmVhdGUgbWl4ICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgIGZvciBicm93c2VycyB0aGF0IGRvbid0IHN1cHBvcnQgcmdiYSAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gJG14Ymx1cjogICAgICAgICBibHVyIHJhZGl1cyBvZiB0aGUgc2hhZG93ICAgICAgICAgICAgICAgKioqXG5AbWl4aW4gc2V0LWJsZW5kZWQtdGV4dC1zaGFkb3coJG14eHBvcywgJG14eXBvcywgJG14Y29sb3IsICRteGFscGhhOiAxLjAsICRteGJnLWNvbG9yOiAkbXhjb2xvciwgJG14Ymx1cjogMCkge1xuICAkbXh3ZWlnaHQgICAgICAgICA6IDEwMCokbXhhbHBoYTtcbiAgdGV4dC1zaGFkb3cgICAgICAgOiAkbXh4cG9zICRteHlwb3MgJG14Ymx1ciBtaXgoJG14Y29sb3IsICRteGJnLWNvbG9yLCAkbXh3ZWlnaHQpO1xuICB0ZXh0LXNoYWRvdyAgICAgICA6ICRteHhwb3MgJG14eXBvcyAkbXhibHVyIHJnYmEoJG14Y29sb3IsICRteGFscGhhKTtcbn1cbiAgICAgICAgICAgICAgICAgICAgLy8gU2FtZSBhcyBhYm92ZSB3aXRob3V0IFJCR0EsIHVzZWZ1bCB0byBvdmVyY29tZSBuZXN0aW5nICAgKioqXG5AbWl4aW4gc2V0LWJsZW5kZWQtdGV4dC1zaGFkb3ctc2ltcGxlKCRteHhwb3MsICRteHlwb3MsICRteGNvbG9yLCAkbXhhbHBoYTogMS4wLCAkbXhiZy1jb2xvcjogJG14Y29sb3IsICRteGJsdXI6IDApIHtcbiRteHdlaWdodCAgICAgICAgICAgOiAxMDAqJG14YWxwaGE7XG50ZXh0LXNoYWRvdyAgICAgICAgIDogJG14eHBvcyAgJG14eXBvcyAkbXhibHVyIG1peCgkbXhjb2xvciwgJG14YmctY29sb3IsICRteHdlaWdodCk7XG59XG4gICAgICAgICAgICAgICAgICAgIC8vIEJsZW5kZWQgY29sb3IgcnVsZXMgZm9yIGJhY2tncm91bmRzICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAkbXh4cG9zOiAgICAgICAgIGhvcml6b250YWwgb2Zmc2V0IG9mIHRoZSBzaGFkb3cgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gJG14eXBvczogICAgICAgICB2ZXJ0aWNhbCBvZmZzZXQgb2YgdGhlIHNoYWRvdyAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICRteGNvbG9yOiAgICAgICAgYmFzZSBjb2xvciBmb3Igc2hhZG93ICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAkbXhhbHBoYTogICAgICAgIDAuMCAtIDEuMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gJG14Ymdjb2xvcjogICAgICBiYWNrZ3JvdW5kIGNvbG9yIHRvIGNyZWF0ZSBtaXggICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3Qgc3VwcG9ydCByZ2JhICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyAkbXhibHVyOiAgICAgICAgIGJsdXIgcmFkaXVzIG9mIHRoZSBzaGFkb3cgICAgICAgICAgICAgICAqKipcbkBtaXhpbiBzZXQtYmxlbmRlZC1ib3gtc2hhZG93KCRteHhwb3MsICRteHlwb3MsICRteGNvbG9yLCAkbXhhbHBoYTogMS4wLCAkbXhiZy1jb2xvcjogJG14Y29sb3IsICRteGJsdXI6IDApIHtcbiAgJG14d2VpZ2h0ICAgICAgICAgOiAxMDAqJG14YWxwaGE7XG4gIGJveC1zaGFkb3cgICAgICAgIDogJG14eHBvcyAkbXh5cG9zICRteGJsdXIgbWl4KCRteGNvbG9yLCAkbXhiZy1jb2xvciwgJG14d2VpZ2h0KTtcbiAgYm94LXNoYWRvdyAgICAgICAgOiAkbXh4cG9zICRteHlwb3MgJG14Ymx1ciByZ2JhKCRteGNvbG9yLCAkbXhhbHBoYSk7XG59XG4gICAgICAgICAgICAgICAgICAgIC8vIFNhbWUgYXMgYWJvdmUgd2l0aG91dCBSQkdBLCB1c2VmdWwgdG8gb3ZlcmNvbWUgbmVzdGluZyAgICoqKlxuQG1peGluIHNldC1ibGVuZGVkLWJveC1zaGFkb3ctc2ltcGxlKCRteHhwb3MsICRteHlwb3MsICRteGNvbG9yLCAkbXhhbHBoYTogMS4wLCAkbXhiZy1jb2xvcjogJG14Y29sb3IsICRteGJsdXI6IDApIHtcbiAgJG14d2VpZ2h0ICAgICAgICAgOiAxMDAqJG14YWxwaGE7XG4gIGJveC1zaGFkb3cgICAgICAgIDogJG14eHBvcyAgJG14eXBvcyAkbXhibHVyIG1peCgkbXhjb2xvciwgJG14YmctY29sb3IsICRteHdlaWdodCk7XG59XG4vLyAtLS0gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggTW9vdGx5IE9idmlhdGUgLSBTZWUgL0xJQ0VOU0UubWQgLS0tLS0tLS0tLS0tLS0tICoqKlxuIiwKCQkiLy8gMDQgUmVzZXQgUnVsZXMgLSAwMSBCYXNlIHJlc2V0cyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqKipcbi8vIFJlc2V0IHJ1bGVzIGFkYXB0ZWQgZnJvbSBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlICAgICAgICAgICAgICAgICAgKioqXG4vLyBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBzZXR0aW5ncyBpbiBhbGwgYnJvd3NlcnMuICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuaHRtbCB7XG4vLyAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7ICAgICAgICAgICAgLy8gd2Ugc2V0IHRoaXMgZWxzZXdoZXJlICAgICAgICAgICAgICAgICoqKlxuICBmb250LXNpemU6ICAgICAgICAgICAgICAgIDEwMCU7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAgICAgMTAwJTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICBoZWlnaHQ6ICAgICAgICAgICAgICAgICAgIDEwMCU7XG59XG4gICAgICAgICAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgYm9keSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzICAgICAgICAgICAgICAgICAgICoqKlxuYm9keSB7IG1hcmdpbjogMDsgaGVpZ2h0OiAxMDAlOyBmb250LWZhbWlseTogJGYtZGVmYXVsdDsgfVxuLy8gSFRNTDUgRElTUExBWSBERUZJTklUSU9OUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gQmxvY2sgYW5kIGZvcm1hdCBmaXhlcyBmb3IgdmFyaW91cyBicm93c2VycyAgICAgICAgICAgICAgKioqXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbmhncm91cCxcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyBkaXNwbGF5OiBibG9jazsgfVxuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gICAgICAgICAgICAgICAgICAgIC8vIE9sZCBicm93c2VyIHR3ZWFrcyBmb3IgbmV3IG1lZGlhIGNvbXBvbmVudHMgICAgICAgICAgICAgICoqKlxuLmx0LWllOCB7XG4gIGF1ZGlvLFxuICBjYW52YXMsXG4gIHZpZGVvIHsgZGlzcGxheTogaW5saW5lOyB6b29tOiAxOyB9XG59XG5hdWRpbzpub3QoW2NvbnRyb2xzXSkgeyBkaXNwbGF5OiBub25lOyBoZWlnaHQ6IDA7IH1cbnByb2dyZXNzIHsgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG50ZW1wbGF0ZSxcbltoaWRkZW5dIHsgZGlzcGxheTogbm9uZTsgfVxuLy8gVGFibGVzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gUmVtb3ZlIG1vc3Qgc3BhY2luZyBiZXR3ZWVuIHRhYmxlIGNlbGxzLiAgICAgICAgICAgICAgICAgKioqXG50YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IGJvcmRlci1zcGFjaW5nOiAwOyB9XG50ZCxcbnRoIHsgcGFkZGluZzogMDsgfVxuLy8gLS0tIENvcHlyaWdodCAoYykgMjAxNy0yMDE4IE1vb3RseSBPYnZpYXRlIC0gU2VlIC9MSUNFTlNFLm1kIC0tLS0tLS0tLS0tLS0tLSAqKipcbiIsCgkJIi8vIDA0IFJlc2V0IFJ1bGVzIC0gMDIgU2VtYW50aWMgZWxlbWVudCByZXNldHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKioqXG4vLyBSZXNldCBydWxlcyBhZGFwdGVkIGZyb20gbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSAgICAgICAgICAgICAgICAgICoqKlxuLy8gZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi8vIFRFWFQgTEVWRUwgU0VNQU5USUNTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS4gICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuICAgICAgICAgICAgICAgICAgICAgKioqXG5hYmJyIHtcbiAgYm9yZGVyLWJvdHRvbTogICAgMXB4IGRvdHRlZCAkYy1ncmF5LWJvcmRlcjtcbn1cbiAgICAgICAgICAgICAgICAgICAgLy8gUHJldmVudCB0aGUgZHVwbGljYXRpb24gb2YgYm9sZGVyIGluIFNhZmFyaSA2LiAgICAgICAgICAgKioqXG5iLFxuc3Ryb25nIHsgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cbmIsXG5zdHJvbmcgeyBmb250LXdlaWdodDogYm9sZDsgfVxuZGZuLFxuY2l0ZSxcbmVtLFxuaSxcbnZhciB7IGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuICAgICAgICAgICAgICAgICAgICAvLyBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBoMSBlbGVtZW50cy4gICAgICAgICAqKipcbmgxIHsgZm9udC1zaXplOiAyZW07IG1hcmdpbjogMC42N2VtIDA7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLiAgICAgICAgICAgKioqXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGMteWVsbG93O1xuICBjb2xvcjogICAgICAgICAgICAkYy1ibGFjaztcbn1cbiAgICAgICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBmb3Igc21hbGwgdGFnLiAgICAgICAgICAgICAgICAgKioqXG5zbWFsbCB7IGZvbnQtc2l6ZTogIDgwJTsgfVxuICAgICAgICAgICAgICAgICAgICAvLyBLZWVwIHN1YiBhbmQgc3VwIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCAqKipcbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogICAgICAgIDc1JTtcbiAgbGluZS1oZWlnaHQ6ICAgICAgMDtcbiAgcG9zaXRpb246ICAgICAgICAgcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiAgIGJhc2VsaW5lO1xufVxuc3ViIHsgYm90dG9tOiAtMC4yNWVtOyB9XG5zdXAgeyB0b3A6ICAgIC0wLjVlbTsgfVxuLy8gR1JPVVBJTkcgQ09OVEVOVCAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gQ29ycmVjdCBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUuICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIENvcnJlY3Qgb2RkIGBlbWAgZm9udCBzaXppbmcuICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAgeyBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IGZvbnQtc2l6ZTogMWVtOyB9XG4gICAgICAgICAgICAgICAgICAgIC8vIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLiAgICAgICAgICAgICAgICAgICAgICAgICoqKlxucHJlIHsgb3ZlcmZsb3c6IGF1dG87IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LiAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG5maWd1cmUgeyBtYXJnaW46IDFlbSA0MHB4OyB9XG4gICAgICAgICAgICAgICAgICAgIC8vIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS4gICAgICAgICAgICAgICAgICAgICAgICAqKipcbmhyIHsgYm94LXNpemluZzogY29udGVudC1ib3g7IGhlaWdodDogMDsgb3ZlcmZsb3c6IHZpc2libGU7IH1cbi8vIC0tLSBDb3B5cmlnaHQgKGMpIDIwMTctMjAxOCBNb290bHkgT2J2aWF0ZSAtIFNlZSAvTElDRU5TRS5tZCAtLS0tLS0tLS0tLS0tLS0gKioqXG4iLAoJCSIvLyAwNCBSZXNldCBSdWxlcyAtIDAzIExpbmtzIGFuZCBsaW5rZWQgY29udGVudCByZXNldHMgPT09PT09PT09PT09PT09PT09PT09PT09ICoqKlxuLy8gUmVzZXQgcnVsZXMgYWRhcHRlZCBmcm9tIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgICAgICAgICAgICAgICAgICAqKipcbi8vIGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyBMSU5LUyBGSVhFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLiAgKioqXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG59XG4gICAgICAgICAgICAgICAgICAgIC8vIEZvcmNlIGhvdmVyIG91dGxpbmUgY29sb3IuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuYTpmb2N1cyB7XG4gIG91dGxpbmU6IHRoaW4gZG90dGVkICRjLWdyYXktYm9yZGVyO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xufVxuICAgICAgICAgICAgICAgICAgICAvLyBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIGFsc28gYWN0aXZlICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gb3IgaG92ZXJlZCBpbiBhbGwgYnJvd3NlcnMuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG5hOmFjdGl2ZSxcbmE6aG92ZXIgeyBvdXRsaW5lOiAwOyBvdXRsaW5lLXdpZHRoOiAwOyB9XG4vLyBFTUJFRERFRCBDT05URU5UICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS4gICAgICAqKipcbmltZyB7IGJvcmRlci1zdHlsZTogbm9uZTsgYm9yZGVyOiAwOyB9XG4gICAgICAgICAgICAgICAgICAgIC8vIENsZWFuIHVwIGltYWdlIHNpemluZy4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuaW1nIHtcbiAgbWF4LXdpZHRoOiAgICAgICAgICAgICAgMTAwJTtcbiAgaGVpZ2h0OiAgICAgICAgICAgICAgICAgYXV0bztcbiAgdmVydGljYWwtYWxpZ246ICAgICAgICAgbWlkZGxlO1xuICBib3JkZXI6ICAgICAgICAgICAgICAgICAwO1xuICAtbXMtaW50ZXJwb2xhdGlvbi1tb2RlOiBiaWN1YmljO1xufVxuICAgICAgICAgICAgICAgICAgICAvLyBDbGVhbiB1cCBpbWFnZSBzaXppbmcgZm9yIElFOC4gICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbi5sdC1pZTggaW1nIHsgd2lkdGg6IGF1dG9cXDk7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuICAgICAgICAgICAgICAgKioqXG5zdmc6bm90KDpyb290KSB7IG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSBnYXAgYmV0d2VlbiBhdWRpbywgY2FudmFzLCBpZnJhbWVzLCAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIGltYWdlcywgdmlkZW9zIGFuZCB0aGUgYm90dG9tIG9mIHRoZWlyIGNvbnRhaW5lcnMuICAgICAgICoqKlxuYXVkaW8sXG5jYW52YXMsXG5pZnJhbWUsXG5pbWcsXG5zdmcsXG52aWRlbyB7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gR29vZ2xlIGNsZWFudXAgKG5vdCB1c2VkKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4vLyAjbWFwX2NhbnZhcyBpbWcsIC5nb29nbGUtbWFwcyBpbWcgeyBtYXgtd2lkdGg6IG5vbmUgfVxuLy8gSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuIChub3QgdXNlZClcbi8vIHN2Zzpub3QoOnJvb3QpIHsgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuLy8gLS0tIENvcHlyaWdodCAoYykgMjAxNy0yMDE4IE1vb3RseSBPYnZpYXRlIC0gU2VlIC9MSUNFTlNFLm1kIC0tLS0tLS0tLS0tLS0tLSAqKipcbiIsCgkJIi8vIDA0IFJlc2V0IFJ1bGVzIC0gMDQgRm9ybSByZXNldHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKioqXG4vLyBSZXNldCBydWxlcyBhZGFwdGVkIGZyb20gbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSAgICAgICAgICAgICAgICAgICoqKlxuLy8gZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gU2V0IGRlZmF1bHQgZm9udCBwcm9wZXJ0aWVzIHRvIGluaGVyaXQuICAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS4gICAgICAgICAgICAgICAgICoqKlxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHsgY29sb3I6IGluaGVyaXQ7IGZvbnQ6IGluaGVyaXQ7IG1hcmdpbjogMDsgfVxuICAgICAgICAgICAgICAgICAgICAvLyBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS4gICAgICAqKipcbm9wdGdyb3VwIHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gU2hvdyBvdmVyZmxvdyBpbiBJRSAvIEVkZ2UuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG5idXR0b24sXG5pbnB1dCB7IG92ZXJmbG93OiB2aXNpYmxlOyBsaW5lLWhlaWdodDogbm9ybWFsOyB9XG4gICAgICAgICAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBFZGdlLCBGaXJlZm94LCBhbmQgSUUuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbmJ1dHRvbixcbnNlbGVjdCB7IHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG4gICAgICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgYSBXZWJLaXQgYnVnIHRoYXQgZGVzdHJveXMgbmF0aXZlIGF1ZGlvIGFuZCAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyB2aWRlbyBjb250cm9scyBpbiBBbmRyb2lkIDQuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIGluIGlPUyBhbmQgU2FmYXJpLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInN1Ym1pdFwiXSB7IC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy4gICAgICAgICAgICAgKioqXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0geyBjdXJzb3I6IGRlZmF1bHQ7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC4gICAgICAgICAgKioqXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7IGJvcmRlci1zdHlsZTogbm9uZTsgcGFkZGluZzogMDsgfVxuICAgICAgICAgICAgICAgICAgICAvLyBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBsaW5lLWhlaWdodCBvbiBpbnB1dCB1c2luZyAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gIWltcG9ydGFudCBpbiB0aGUgVUEgc3R5bGVzaGVldC4gICAgICAgICAgICAgICAgICAgICAgICAgKioqXG5pbnB1dCB7IGxpbmUtaGVpZ2h0OiBub3JtYWw7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLiAgICAgKioqXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7IG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuICAgICAgICAgICAgICAgICAgICAvLyBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMuICAqKipcbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAgMXB4IHNvbGlkICRjLWdyYXktYm9yZGVyO1xuICBtYXJnaW46ICAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuICAgICAgICAgICAgICAgICAgICAvLyBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLiAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBmaWVsZHNldCBpbiBJRS4gICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyB3aGVuIHplcm9pbmcgb3V0IGZpZWxkc2V0IGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy4gICAgICAqKipcbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6ICBib3JkZXItYm94O1xuICBjb2xvcjogICAgICAgaW5oZXJpdDtcbiAgZGlzcGxheTogICAgIHRhYmxlO1xuICBtYXgtd2lkdGg6ICAgMTAwJTtcbiAgcGFkZGluZzogICAgIDA7XG4gIGJvcmRlcjogICAgICAwO1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xufVxuICAgICAgICAgICAgICAgICAgICAvLyBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLiAgICAgICAgICAgICAqKipcbnRleHRhcmVhIHsgb3ZlcmZsb3c6IGF1dG87IHZlcnRpY2FsLWFsaWduOiB0b3A7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLiAgICAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0geyBib3gtc2l6aW5nOiBib3JkZXItYm94OyBwYWRkaW5nOiAwOyB9XG4gICAgICAgICAgICAgICAgICAgIC8vIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBidXR0b25zIGluIENocm9tZS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24geyBoZWlnaHQ6IGF1dG87IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLiAgICAgICAgICAgICAgICAgICAgICoqKlxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtbW96LWJveC1zaXppbmc6ICAgIGNvbnRlbnQtYm94O1xuICBib3gtc2l6aW5nOiAgICAgICAgIGNvbnRlbnQtYm94O1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgb3V0bGluZS1vZmZzZXQ6ICAgICAtMnB4O1xufVxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbixcbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24geyAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7IC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuICAgICAgICAgICAgICAgICAgICAvLyBDb3JyZWN0IHRoZSB0ZXh0IHN0eWxlIG9mIHBsYWNlaG9sZGVycyBpbiAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyBjb2xvcjogaW5oZXJpdDsgb3BhY2l0eTogMC41NDsgfVxuICAgICAgICAgICAgICAgICAgICAvLyBGaXggaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZXMgaW4gaU9TIGFuZCBTYWZhcmkuICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBpbmhlcml0IGluIFNhZmFyaS4gICAgICAgICAgICAgKioqXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHsgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IGZvbnQ6IGluaGVyaXQ7IH1cbiAgICAgICAgICAgICAgICAgICAgLy8gQ29uc2lzdGVudCBwb2ludGVyIHVzYWdlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG5sYWJlbCxcbnNlbGVjdCxcbmJ1dHRvbixcbmlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdLFxuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdIHsgY3Vyc29yOiBwb2ludGVyOyB9XG4vLyAtLS0gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggTW9vdGx5IE9idmlhdGUgLSBTZWUgL0xJQ0VOU0UubWQgLS0tLS0tLS0tLS0tLS0tICoqKlxuIiwKCQkiLy8gMDQgUmVzZXQgUnVsZXMgLSAxMSBQcmludCBtZWRpYSByZXNldHMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqKipcbi8vIFNvdXJjZTogLy9naXRodWIuY29tL2g1YnAvaHRtbDUtYm9pbGVycGxhdGUvYmxvYi9tYXN0ZXIvY3NzL21haW4uY3NzICAgICAgICAgKioqXG5AbWVkaWEgcHJpbnQge1xuICAqLFxuICAqOmJlZm9yZSxcbiAgKjphZnRlciB7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgICAgICAgICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICAgICAgICRjLWJsYWNrICAgICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogIHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogIG5vbmUgICAgICAgICFpbXBvcnRhbnQ7XG4gIH1cbiAgYSxcbiAgYTp2aXNpdGVkIHsgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cbiAgYVtocmVmXTphZnRlciB7IGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiOyB9XG4gIGFiYnJbdGl0bGVdOmFmdGVyIHsgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiOyB9XG4gICAgICAgICAgICAgICAgICAgIC8vIERvbid0IHNob3cgbGlua3MgZm9yIGltYWdlcywgb3IganMvaW50ZXJuYWwgbGlua3MgICAgICAgICoqKlxuICAuaXIgYTphZnRlcixcbiAgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyLFxuICBhW2hyZWZePVwiI1wiXTphZnRlciB7IGNvbnRlbnQ6IFwiXCI7IH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkYy1ncmF5LWJvcmRlcjtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIH1cbiAgdGhlYWQgeyBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7IH1cbiAgdHIsXG4gIGltZyB7IHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICBpbWcgeyBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuICBAcGFnZSB7IG1hcmdpbjogMC4yNWluOyB9XG4gIHAsXG4gIGgyLFxuICBoMyB7IG9ycGhhbnM6IDM7IHdpZG93czogMzsgfVxuICBoMixcbiAgaDMgeyBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDsgfVxufVxuLy8gLS0tIENvcHlyaWdodCAoYykgMjAxNy0yMDE4IE1vb3RseSBPYnZpYXRlIC0gU2VlIC9MSUNFTlNFLm1kIC0tLS0tLS0tLS0tLS0tLSAqKipcbiIsCgkJIi8vID09PSAwNSBMYXlvdXQgLSAwMCBBY2Nlc3NpYmlsaXR5ID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKioqXG4vLyBEZWZpbmUgb3VyIGNvcmUgYWNjZXNzaWJsZSBuYXZpZ2F0aW9uIGJsb2NrICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuI2FjY2Vzcy1uYXYge1xuICB3aWR0aCAgICAgICAgICAgICA6IDEwMCU7XG4gIG1hcmdpbiAgICAgICAgICAgIDogMDtcbiAgcGFkZGluZyAgICAgICAgICAgOiAwO1xuICBoMSwgaDIsIHAsIG9sLCBsaSwgYSB7XG4gICAgcG9zaXRpb24gICAgICAgIDogYWJzb2x1dGU7XG4gICAgY2xpcCAgICAgICAgICAgIDogcmVjdCgwIDAgMCAwKTtcbiAgICB3aWR0aCAgICAgICAgICAgOiAxcHg7XG4gICAgaGVpZ2h0ICAgICAgICAgIDogMXB4O1xuICAgIG92ZXJmbG93ICAgICAgICA6IGhpZGRlbjtcbiAgICBtYXJnaW4gICAgICAgICAgOiAtMXB4O1xuICAgIGJvcmRlciAgICAgICAgICA6IDA7XG4gICAgcGFkZGluZyAgICAgICAgIDogMDtcbiAgfVxufVxuLnJlYWRlci1vbmx5IHtcbiAgZGlzcGxheSAgICAgICAgICAgOiBibG9jaztcbiAgcG9zaXRpb24gICAgICAgICAgOiBhYnNvbHV0ZTtcbiAgdG9wICAgICAgICAgICAgICAgOiAwO1xuICBsZWZ0ICAgICAgICAgICAgICA6IC0xMDAwZW07XG59XG4gICAgICAgICAgICAgICAgICAgIC8vIEZpeCB0byBwcmV2ZW50IHRoaXMgZmVhdHVyZSBmcm9tIHRyaWdnZXJpbmcgZm9yIG1vYmlsZSAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBJdCBhZGRyZXNzZXMgYSBidWcgaW4gdGhlIHN0YXRlIGhlYWRlciAgICAgICAgICAgICAgICAgICAqKipcbkBtZWRpYSAobWluLXdpZHRoOiAkYnJlYWtUYWJsZXQpIHtcbiAgI2FjY2Vzcy1uYXYge1xuICAgIGE6Zm9jdXMge1xuICAgICAgZGlzcGxheSAgICAgICA6IGJsb2NrO1xuICAgICAgcG9zaXRpb24gICAgICA6IHN0YXRpYztcbiAgICAgIGNsaXAgICAgICAgICAgOiBhdXRvO1xuICAgICAgd2lkdGggICAgICAgICA6IDEwMCU7XG4gICAgICBoZWlnaHQgICAgICAgIDogYXV0bztcbiAgICAgIG92ZXJmbG93ICAgICAgOiB2aXNpYmxlO1xuICAgICAgbWFyZ2luICAgICAgICA6IDA7XG4gICAgICBwYWRkaW5nICAgICAgIDogMC41ZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYy1iYW5uZXItYmc7XG4gICAgICB0ZXh0LWFsaWduICAgIDogY2VudGVyO1xuICAgICAgY29sb3IgICAgICAgICA6ICRjLWJhbm5lci10ZXh0O1xuICAgICAgZm9udC13ZWlnaHQgICA6IGJvbGQ7XG4gICAgICBmb250LXNpemUgICAgIDogcHgyZW1zKDIwKTtcbiAgICAgIHotaW5kZXggICAgICAgOiA1MDA7XG4gICAgfVxuICB9XG59XG4vLyAtLS0gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggTW9vdGx5IE9idmlhdGUgLSBTZWUgL0xJQ0VOU0UubWQgLS0tLS0tLS0tLS0tLS0tICoqKlxuIiwKCQkiLy8gMDUgTGF5b3V0IC0gMDEgQmFzaWMgZm9ybWF0dGluZyBmb3IgdGhlIGRvY3VtZW50ID09PT09PT09PT09PT09PT09PT09PT09PT09PSAqKipcbmJvZHkge1xuICBib3gtc2l6aW5nICAgICAgICA6IGJvcmRlci1ib3g7XG4gIHBvc2l0aW9uICAgICAgICAgIDogcmVsYXRpdmU7XG4gIG1hcmdpbiAgICAgICAgICAgIDogMDtcbiAgcGFkZGluZyAgICAgICAgICAgOiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yICA6ICRjLWJhc2UtYmc7XG4gIGNvbG9yICAgICAgICAgICAgIDogJGMtYmFzZS10ZXh0O1xuICBmb250ICAgICAgICAgICAgICA6IG5vcm1hbCBub3JtYWwgNDAwIDEuMGVtICRmLWRlZmF1bHQ7XG4gIGxpbmUtaGVpZ2h0ICAgICAgIDogJGh0LWxpbmUtdGFsbDtcbn1cbiAgICAgICAgICAgICAgICAgICAgLy8gTWFpbiBib2R5IG9mIHRoZSBwYWdlLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4jY29udGVudC1tYWluIHtcbiAgd2lkdGg6IDEwMCU7XG4gICNjb250ZW50LWJveCB7XG4gICAgbWFyZ2luOiAxLjBlbSAyLjBlbSAyLjBlbSAyMC4wZW07XG4gICAgbWF4LXdpZHRoOiAkbWF4LWNvbnRlbnQtd2lkdGg7XG4gIH1cbiAgcCB7XG4gICAgbGluZS1oZWlnaHQ6ICRodC1saW5lLWRlZmF1bHQ7XG4gIH1cbiAgaDErcCwgaDIrcCwgaDMrcCwgaDQrcCwgaDUrcCwgaDYrcCB7IG1hcmdpbi10b3A6IDA7IH1cbiAgaDEge1xuICAgIHBhZGRpbmcgICAgICAgICA6IDEuMjVlbSAwIDAuNWVtIDA7XG4gICAgbWFyZ2luICAgICAgICAgIDogMDtcbiAgICBjb2xvciAgICAgICAgICAgOiAkYy1oMS10ZXh0O1xuICAgIGZvbnQtZmFtaWx5ICAgICA6ICRmLXRpdGxlO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gIH1cbiAgaDIge1xuICAgIHBhZGRpbmcgICAgICAgICA6IDEuMjVlbSAwIDAuMzc1ZW0gMDtcbiAgICBtYXJnaW4gICAgICAgICAgOiAwO1xuICAgIGZvbnQtZmFtaWx5ICAgICA6ICRmLXRpdGxlO1xuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XG4gICAgZm9udC1zaXplICAgICAgIDogJGgyLXNpemU7XG4gICAgbGluZS1oZWlnaHQgICAgIDogJGh0LWxpbmUtY29tcGFjdDtcbiAgICBjb2xvciAgICAgICAgICAgOiAkYy1oMi10ZXh0O1xuICB9XG4gIGgzIHtcbiAgICBwYWRkaW5nICAgICAgICAgOiAxLjI1ZW0gMCAwLjM3NWVtIDA7XG4gICAgbWFyZ2luICAgICAgICAgIDogMDtcbiAgICBmb250LWZhbWlseSAgICAgOiAkZi10aXRsZTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtc2l6ZSAgICAgICA6ICRoMy1zaXplO1xuICAgIGxpbmUtaGVpZ2h0ICAgICA6ICRodC1saW5lLWNvbXBhY3Q7XG4gICAgY29sb3IgICAgICAgICAgIDogJGMtaDMtdGV4dDtcbiAgfVxuICBoNCB7XG4gICAgcGFkZGluZyAgICAgICAgIDogMS4yNWVtIDAgMC4zNzVlbSAwO1xuICAgIG1hcmdpbiAgICAgICAgICA6IDA7XG4gICAgZm9udC1mYW1pbHkgICAgIDogJGYtdGl0bGU7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXNpemUgICAgICAgOiAkaDQtc2l6ZTtcbiAgICBsaW5lLWhlaWdodCAgICAgOiAkaHQtbGluZS1jb21wYWN0O1xuICAgIGNvbG9yICAgICAgICAgICA6ICRjLWg0LXRleHQ7XG4gIH1cbiAgaDUge1xuICAgIHBhZGRpbmcgICAgICAgICA6IDEuMjVlbSAwIDAuMzc1ZW0gMDtcbiAgICBtYXJnaW4gICAgICAgICAgOiAwO1xuICAgIGZvbnQtZmFtaWx5ICAgICA6ICRmLXRpdGxlO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgZm9udC1zaXplICAgICAgIDogJGg1LXNpemU7XG4gICAgbGluZS1oZWlnaHQgICAgIDogJGh0LWxpbmUtY29tcGFjdDtcbiAgICBjb2xvciAgICAgICAgICAgOiAkYy1oNS10ZXh0O1xuICB9XG4gIGg2IHtcbiAgICBwYWRkaW5nICAgICAgICAgOiAxLjI1ZW0gMCAwLjM3NWVtIDA7XG4gICAgbWFyZ2luICAgICAgICAgIDogMDtcbiAgICBmb250LWZhbWlseSAgICAgOiAkZi10aXRsZTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGZvbnQtc2l6ZSAgICAgICA6ICRoNi1zaXplO1xuICAgIGxpbmUtaGVpZ2h0ICAgICA6ICRodC1saW5lLWNvbXBhY3Q7XG4gICAgY29sb3IgICAgICAgICAgIDogJGMtaDYtdGV4dDtcbiAgfVxuICBhIHtcbiAgICBjb2xvciAgICAgICAgICAgOiAkYy1saW5rcy10ZXh0O1xuICAgIHRleHQtZGVjb3JhdGlvbiA6IG5vbmU7XG4gICAgQGluY2x1ZGUgc2V0LWJsZW5kZWQtYm9yZGVyKCRjLWxpbmtzLXRleHQsIGJvdHRvbSwgMC4xNSwgMXB4LCBzb2xpZCwgJGMtYmFzZS1iZyk7XG4gIH1cbiAgYTp2aXNpdGVkIHtcbiAgICBjb2xvciAgICAgICAgICAgOiAkYy12aXNpdGVkLXRleHQ7XG4gIH1cbiAgYTpob3ZlciB7XG4gICAgQGluY2x1ZGUgc2V0LWJsZW5kZWQtYm9yZGVyKCRjLWxpbmtzLXRleHQsIGJvdHRvbSwgMC44NSwgMXB4LCBzb2xpZCwgJGMtYmFzZS1iZyk7XG4gICAgQGluY2x1ZGUgc2V0LWJsZW5kZWQtYmFja2dyb3VuZCgkYy1idXR0b24tYmcsIDAuMDI1LCAkYy1iYXNlLWJnKVxuICB9XG59XG5cbi8vIC0tLSBNZWRpYSBydWxlcyBmb3Igc21hbGwgc2NyZWVucyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKioqXG5AbWVkaWEgKG1heC13aWR0aDogJGJyZWFrRGVza3RvcCkge1xuICAubm8tbW9iaWxlIHsgZGlzcGxheTogbm9uZTsgfVxuICAjYnJlYWRjcnVtYi1ib3gge1xuICAgIEBpbmNsdWRlIHNldC1ibGVuZGVkLWJvcmRlcigkYy1iYW5uZXItYmcsIHRvcCwgMC4yNSwgMXB4LCBzb2xpZCwgJGMtYmFzZS1iZylcbiAgfVxuICAjdGl0bGUtYm94IHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBoMSwgaDIucGFnZS10aXRsZSB7XG4gICAgICBwYWRkaW5nICAgICAgIDogMC4xMjVlbSAwLjI1ZW0gMC4xMjVlbSAwLjI1ZW07XG4gICAgICBmb250LWZhbWlseSAgIDogJGYtdGl0bGU7XG4gICAgICBmb250LXNpemUgICAgIDogJGgxLW1vYi1zaXplO1xuICAgICAgZm9udC13ZWlnaHQgICA6IDkwMDtcbiAgICAgIGxpbmUtaGVpZ2h0ICAgOiAkaHQtbGluZS1jb21wYWN0O1xuICAgICAgY29sb3IgICAgICAgICA6ICRjLWgxLXRleHQ7XG4gICAgfVxuICB9XG4gICNjb250ZW50LW1haW4ge1xuICAgIGNsZWFyICAgICAgICAgICA6IGJvdGg7XG4gICAgI2NvbnRlbnQtYm94IHsgbWFyZ2luOiAyLjBlbTsgfVxuICB9XG59XG4vLyAtLS0gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggTW9vdGx5IE9idmlhdGUgLSBTZWUgL0xJQ0VOU0UubWQgLS0tLS0tLS0tLS0tLS0tICoqKlxuIiwKCQkiLy8gPT09IDA1IExheW91dCAtIDAyIFBhZ2UgSGVhZGVyID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqKipcbi8vICoqKiBUaGUgcGFnZSBoZWFkZXIgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiogKioqXG4jcGFnZS1oZWFkZXIge1xuICBwb3NpdGlvbiAgICAgICAgICA6IHJlbGF0aXZlO1xuICB6LWluZGV4ICAgICAgICAgICA6IDMwO1xuICBjbGVhciAgICAgICAgICAgICA6IGJvdGg7XG4gIG1hcmdpbiAgICAgICAgICAgIDogMDtcbiAgYmFja2dyb3VuZC1jb2xvciAgOiAkYy1iYW5uZXItYmc7XG4gIGNvbG9yICAgICAgICAgICAgIDogJGMtYmFubmVyLXRleHQ7XG4gIGZvbnQtZmFtaWx5ICAgICAgIDogJGYtbmF2O1xuICBmb250LXdlaWdodCAgICAgICA6IGJvbGQ7XG4gIGxldHRlci1zcGFjaW5nICAgIDogMC4wNWVtO1xuXG4gICNoZWFkZXItdGl0bGUge1xuICAgIHBhZGRpbmcgICAgICAgICA6IDAuMTI1ZW0gMS4wZW0gMC4xMjVlbSAxLjBlbTtcbiAgICBmb250LWZhbWlseSAgICAgOiAkZi10aXRsZTtcbiAgICBmb250LXNpemUgICAgICAgOiAkaGItc2l6ZTtcbiAgfVxuICAjbmF2aWdhdGlvbi1zZWFyY2gge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkYnJlYWtUYWJsZXQpIHsgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfVxuICAgIHBvc2l0aW9uICAgICAgICA6IHJlbGF0aXZlO1xuICAgIGJveC1zaXppbmcgICAgICA6IGJvcmRlci1ib3g7XG4gICAgd2lkdGggICAgICAgICAgIDogMTAwJTtcbiAgICBib3JkZXItYm90dG9tICAgOiAwLjEyNWVtIHNvbGlkICAkYy1iYW5uZXItYmc7XG4gICAgcGFkZGluZyAgICAgICAgIDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYy13aGl0ZTtcbiAgICB0ZXh0LWFsaWduICAgICAgOiBsZWZ0O1xuICAgIGZvbnQtc2l6ZSAgICAgICA6IDEuMTI1ZW07XG4gICAgbWFyZ2luICAgICAgICAgIDogMC4xMjVlbSAwLjEyNWVtIDAgMDtcbiAgICBidXR0b24sXG4gICAgaW5wdXQge1xuICAgICAgYm94LXNpemluZyAgICA6IGJvcmRlci1ib3g7XG4gICAgICBtYXJnaW4gICAgICAgIDogMDtcbiAgICAgIGJvcmRlciAgICAgICAgOiAwO1xuICAgICAgcGFkZGluZyAgICAgICA6IDAuMjVlbTtcbiAgICAgIGNvbG9yICAgICAgICAgOiAkYy1ncmF5LWRhcms7XG4gICAgICBmb250LWZhbWlseSAgIDogJGYtZGVmYXVsdDtcbiAgICAgIGZvbnQtd2VpZ2h0ICAgOiBub3JtYWw7XG4gICAgICB0ZXh0LWFsaWduICAgIDogbGVmdDtcbiAgICB9XG4gICAgaW5wdXQge1xuICAgICAgaGVpZ2h0ICAgICAgICA6IDIuMTgyNWVtO1xuICAgICAgd2lkdGggICAgICAgICA6IDg1JTtcbiAgICAgIG1hcmdpbi1sZWZ0ICAgOiA1LjBlbTtcbiAgICAgIHBhZGRpbmcgICAgICAgOiAwLjI1ZW0gMS4wZW07XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYy13aGl0ZTtcbiAgICAgIGJvcmRlcjogMDtcbiAgICB9XG4gICAgYnV0dG9uIHtcbiAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkYnJlYWtUYWJsZXQpIHtcbiAgICAgICAgaGVpZ2h0ICAgICAgIDogMi4xNjc1ZW07XG4gICAgICAgIHBvc2l0aW9uICAgIDogYWJzb2x1dGU7XG4gICAgICAgIHRvcCAgICAgICAgIDogMDtcbiAgICAgICAgbGVmdCAgICAgICAgOiAwO1xuICAgICAgfVxuICAgICAgYm94LXNpemluZyAgICA6IGJvcmRlci1ib3g7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYy1iYW5uZXItYmc7XG4gICAgICBib3JkZXItcmlnaHQgIDogMnB4IHNvbGlkICRjLWJhbm5lci1iZztcbiAgICAgIHBhZGRpbmcgICAgICAgOiAwLjE4NzVlbSAxLjc1ZW0gMC4xODc1ZW0gMS43NWVtO1xuICAgICAgY29sb3IgICAgICAgICA6ICRjLWRhcmstYm94LXRleHQ7XG4gICAgICBmb250LXdlaWdodCAgIDogYm9sZDtcbiAgICAgIGZvbnQtc2l6ZSAgICAgOiAxLjAxZW07XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvciA6ICRjLXNlbGVjdGVkLWJnO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAjaGVhZGVyLW5hdiB7XG4gICAgY2xlYXIgICAgICAgICAgIDogYm90aDtcbiAgICB1bCB7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICBwYWRkaW5nICAgICAgIDogMDtcbiAgICAgIG1hcmdpbiAgICAgICAgOiAwIDAgMCAxLjI1ZW07XG4gICAgICBsaSB7XG4gICAgICAgIGRpc3BsYXkgICAgIDogaW5saW5lO1xuICAgICAgICBsaW5lLWhlaWdodCA6IDEuMjVlbTtcbiAgICAgICAgYSB7XG4gICAgICAgICAgZGlzcGxheSAgIDogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgcGFkZGluZyAgIDogMC41ZW0gMC43NWVtO1xuICAgICAgICAgIGZvbnQtc2l6ZSA6IDAuODc1ZW07XG4gICAgICAgIH1cbiAgICAgICAgYTpob3ZlciB7IHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGEsXG4gIGE6YWN0aXZlLFxuICBhOmhvdmVyLFxuICBhOmxpbmssXG4gIGE6dmlzaXRlZCB7XG4gICAgdGV4dC1kZWNvcmF0aW9uIDogbm9uZTtcbiAgICBjb2xvciAgICAgICAgICAgOiAkYy1iYW5uZXItdGV4dDtcbiAgfVxuICAjZ29vZ2xlLXRyYW5zbGF0ZS1ib3gge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBwYWRkaW5nOiAwIDEuMGVtIDAuMjVlbSAxLjBlbTtcbiAgICBhLFxuICAgIGE6YWN0aXZlLFxuICAgIGE6aG92ZXIsXG4gICAgYTpsaW5rLFxuICAgIGE6dmlzaXRlZCB7XG4gICAgICB0ZXh0LWRlY29yYXRpb24gOiBub25lO1xuICAgICAgY29sb3IgICAgICAgICAgIDogJGMtYmFzZS10ZXh0O1xuICAgIH1cbiAgfVxufVxuXG4vLyAqKiogVGhlIHBhZ2UgaGVhZGVyIC0gTU9CSUxFIFZJRVcgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICoqKlxuQG1lZGlhIChtYXgtd2lkdGg6ICRicmVha1RhYmxldCkge1xuICBkaXYubW9iaWxlLW9ubHkgeyBkaXNwbGF5OiBibG9jazsgfVxuICBzcGFuLm1vYmlsZS1vbmx5IHsgZGlzcGxheTogaW5saW5lOyB9XG4gICNwYWdlLWhlYWRlciB7XG4gICAgLmZhIHsgZGlzcGxheTogaW5saW5lOyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgICAjaGVhZGVyLXRpdGxlIHtcbiAgICAgIG1hcmdpbiAgIDogMCAwIDAgNi4wZW07XG4gICAgICBwYWRkaW5nICAgICAgIDogMCAwLjVlbSAwIDEuMzc1ZW07XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgIGZvbnQtc2l6ZSAgICAgIDogcHgyZW1zKDE4KTtcblxuICAgIH1cbiAgICAjaGVhZGVyLW5hdi10b2dnbGUge1xuICAgICAgZGlzcGxheSAgICAgICA6IGJsb2NrO1xuICAgICAgcG9zaXRpb24gICAgICA6IGFic29sdXRlO1xuICAgICAgdG9wICAgICAgICAgICA6IDA7XG4gICAgICBsZWZ0ICAgICAgICAgIDogMC4yNWVtO1xuICAgICAgbWFyZ2luICAgICAgICA6IDA7XG4gICAgICBwYWRkaW5nICAgICAgIDogMDtcbiAgICAgIGZvbnQtc2l6ZSAgICAgOiBweDJlbXMoMzIpO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3IgICAgICAgICA6ICRjLWludmVyc2UtdGV4dDtcbiAgICAgIHNwYW4geyBkaXNwbGF5OiBub25lOyB9XG4gICAgICBhIHtcbiAgICAgICAgZGlzcGxheSAgICAgOiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHBhZGRpbmcgICAgIDogMC4zNzVlbSAwLjVlbSAwLjVlbSAwLjI1ZW07XG4gICAgICAgIEBpbmNsdWRlIHNldC1ibGVuZGVkLWJvcmRlcigkYy1iYXNlLWJnLCByaWdodCwgMC43NSwgMXB4LCBzb2xpZCwgJGMtYmFubmVyLWJnKTtcbiAgICAgIH1cbiAgICB9XG4gICAgI2hlYWRlci1uYXYge1xuICAgICAgY2xlYXIgICAgICAgICA6IGJvdGg7XG4gICAgICBtYXJnaW4tdG9wICAgIDogMDtcbiAgICB9XG4gICAgI2hlYWRlci1uYXYgI2hlYWRlci1uYXYtYm9keSB7XG4gICAgICBib3gtc2l6aW5nICAgIDogYm9yZGVyLWJveDtcbiAgICAgIG1hcmdpbi10b3AgICAgOiAwO1xuICAgICAgJi5tb2JpbGUtaGlkZGVuIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7IGxlZnQ6LTEwMDBlbTtcbiAgICAgIH1cbiAgICAgIHVsI2hlYWRlci1uYXYtbGlzdCB7XG4gICAgICAgIGJveC1zaXppbmcgIDogYm9yZGVyLWJveDtcbiAgICAgICAgbWFyZ2luLXRvcCAgOiAwO1xuICAgICAgICBtYXJnaW4tbGVmdCA6IDA7XG4gICAgICAgIGJvcmRlci10b3AgIDogMC4xMjVlbSBzb2xpZCAkYy1iYXNlLWJnO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYy1iYW5uZXItYmc7XG4gICAgICB9XG4gICAgICBsaSB7XG4gICAgICAgIGRpc3BsYXkgICAgIDogYmxvY2s7XG4gICAgICAgIGZvbnQtc2l6ZSAgIDogMS41ZW07XG4gICAgICAgIGEge1xuICAgICAgICAgIHdpZHRoICAgICA6IDEwMCU7XG4gICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjLWx0Z3JheS1ib3JkZXI7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiAyLjBlbTtcbiAgICAgICAgIH1cbiAgICAgICAgYTpob3ZlciwgYTpmb2N1cyB7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgYmFja2dyb3VuZC1jb2xvcjogJGMtc2VsZWN0ZWQtYmc7IH1cbiAgICAgIH1cbiAgICB9XG4gICAgI25hdmlnYXRpb24tc2VhcmNoICB7XG4gICAgICBib3gtc2l6aW5nICAgIDogYm9yZGVyLWJveDtcbiAgICAgIG1hcmdpbiAgICAgICAgOiAwO1xuICAgICAgZm9udC1zaXplICAgICA6IDEuNWVtO1xuICAgICAgJi5tb2JpbGUtaGlkZGVuIHtcbiAgICAgICAgcG9zaXRpb24gICAgOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwOyBsZWZ0OiAtMTAwMGVtO1xuICAgICAgfVxuICAgICAgaW5wdXQge1xuICAgICAgICB3aWR0aCAgICAgICA6IDgwJTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiA0LjBlbTtcbiAgICAgICAgbWFyZ2luLWxlZnQgOiAwO1xuICAgICAgfVxuICAgICAgYnV0dG9uIHtcbiAgICAgICAgcG9zaXRpb24gICAgOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wICAgICAgICAgOiAwO1xuICAgICAgICByaWdodCAgICAgICA6IDA7XG4gICAgICAgIGJvcmRlci1sZWZ0IDogMnB4IHNvbGlkICRjLWJveC1iZztcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAwO1xuICAgICAgICBmb250LXNpemUgICA6IDEuMGVtO1xuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yIDogJGMtYm94LWJnO1xuICAgICAgICAgIGNvbG9yICAgICAgIDogJGMtYmFzZS10ZXh0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgICNnb29nbGUtdHJhbnNsYXRlLWJveCB7XG4gICAgICBmbG9hdDogbm9uZTtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgcGFkZGluZy1yaWdodDogMC41ZW1cbiAgICB9XG4gIH1cbn1cblxuLy8gLS0tIENvcHlyaWdodCAoYykgMjAxNy0yMDE4IE1vb3RseSBPYnZpYXRlIC0gU2VlIC9MSUNFTlNFLm1kIC0tLS0tLS0tLS0tLS0tLSAqKipcbiIsCgkJIi8vID09PSAwNSBMYXlvdXQgLSAwNSBUaXRsZSBmb3JtYXR0aW5nID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqKipcbi8vIEFjY2Vzc2liaWxpdHkgaGF4aWUgZm9yIGhlYWRlciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIEhpZGUgcmVhbCBIMSBmcm9tIHNpZ2h0ZWQgdXNlcnMsICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyB1c2UgSDIgdG8gcmVwbGFjZSBpdCBmdXJ0aGVyIGRvd24gICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gSDIgd2lsbCBiZWdpbiB0aGUgY29udGVudCBhdCB0aGUgc2FtZSBsZXZlbCBhcyBvdGhlciAgICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIEgyIGJsb2NrIG1hcmtlcnMuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBBY2Nlc3NpYmlsaXR5IEZpeCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gSGlkZSBIMSBmcm9tIHNpZ2h0ZWQgdXNlcnMsIHJlcGxhY2UgdyBIMiBmdXJ0aGVyIGRvd24uICAgKioqXG4gICAgICAgICAgICAgICAgICAgIC8vIEluIHRleHQgc3RyZWFtLCBIMiB3aWxsIGJlZ2luIHRoZSBjb250ZW50ICAgICAgICAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyBhdCB0aGUgc2FtZSBsZXZlbCBhcyBvdGhlciBIMiBibG9jayBtYXJrZXJzLiAgICAgICAgICAgICAqKipcbmgxI2ZpcnN0LWVsIHtcbiAgcG9zaXRpb24gICAgICAgIDogYWJzb2x1dGU7XG4gIGNsaXAgICAgICAgICAgICA6IHJlY3QoMCAwIDAgMCk7XG4gIHdpZHRoICAgICAgICAgICA6IDFweDtcbiAgaGVpZ2h0ICAgICAgICAgIDogMXB4O1xuICBvdmVyZmxvdyAgICAgICAgOiBoaWRkZW47XG4gIG1hcmdpbiAgICAgICAgICA6IC0xcHg7XG4gIGJvcmRlciAgICAgICAgICA6IDA7XG4gIHBhZGRpbmcgICAgICAgICA6IDA7XG59XG4gICAgICAgICAgICAgICAgICAgIC8vIFVzZSBIMiB0byBlbXVsYXRlIEgxIGluIGRpc3BsYXllZCB0aXRsZSBibG9jayBpZiAgICAgICAgICoqKlxuICAgICAgICAgICAgICAgICAgICAvLyB1c2luZyBhY2Nlc3NpYmlsaXR5IGZpeCBhYm92ZS4gICAgICAgICAgICAgICAgICAgICAgICAgICAqKipcbiN0aXRsZS1ib3gge1xuICBtYXJnaW46IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICRjLWJhc2UtYmc7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkYy1iYW5uZXItYmc7XG4gIEBpbmNsdWRlIHNldC1ibGVuZGVkLWJveC1zaGFkb3coMnB4LCAycHgsICRjLWgxLXRleHQsIDAuMjUsICRjLWJhc2UtYmcsIDJweCk7XG4gIGgxLCBoMi5wYWdlLXRpdGxlIHtcbiAgICBtYXJnaW4gICAgICAgICAgOiAwO1xuICAgIHBhZGRpbmcgICAgICAgICA6IDAuMjVlbSAwLjVlbSAwLjEyNWVtIDAuNWVtO1xuICAgIGZvbnQtZmFtaWx5ICAgICA6ICRmLXRpdGxlO1xuICAgIGZvbnQtc2l6ZSAgICAgICA6ICRoMS1zaXplO1xuICAgIGZvbnQtd2VpZ2h0ICAgICA6IDkwMDtcbiAgICBsaW5lLWhlaWdodCAgICAgOiAkaHQtbGluZS1jb21wYWN0O1xuICAgIGNvbG9yICAgICAgICAgICA6ICRjLWgxLXRleHQ7XG4vLyAgICBAaW5jbHVkZSBzZXQtYmxlbmRlZC10ZXh0LXNoYWRvdygycHgsIDJweCwgJGMtaDEtdGV4dCwgMC4yNSwgJGMtYmFzZS1iZywgMnB4KTtcbiAgfVxufVxuICAgICAgICAgICAgICAgICAgICAvLyBXYXlwb2ludHMgdXNlZCB0byBmaXggdGl0bGUgYXQgdG9wIG9mIHBhZ2Ugb24gc2Nyb2xsLiAgICAqKipcbiN0aXRsZS1ib3guZml4ZWQtdG9wIHtcbiAgei1pbmRleCAgICAgICAgICAgOiAxMDA7XG4gIGgxLCBoMi5wYWdlLXRpdGxlLCBwLnBhZ2UtdGl0bGUge1xuICAgIG1hcmdpbiAgICAgICAgICA6IDA7XG4gICAgcGFkZGluZyAgICAgICAgIDogMC41ZW0gMC41ZW0gMC41ZW0gMC43NWVtO1xuICAgIGZvbnQtZmFtaWx5ICAgICA6ICRmLXRpdGxlO1xuICAgIGZvbnQtc2l6ZSAgICAgICA6ICRoMy1zaXplO1xuICAgIGxpbmUtaGVpZ2h0ICAgICA6ICRodC1saW5lLWNvbXBhY3Q7XG4gICAgY29sb3IgICAgICAgICAgIDogJGMtaDEtdGV4dDtcbiAgfVxufVxuICAgICAgICAgICAgICAgICAgICAvLyBGaXggdG8gZWxlbWVudHMgYmVsb3cgZml4ZWQgdGl0bGUgdG8gYXZvaWQgcGFnZSBqdW1wICAgICAqKipcbiAgICAgICAgICAgICAgICAgICAgLy8gdW5kZXIgb24gZWxlbWVudCBjb2xsYXBzZS4gSGVpZ2h0IG92ZXJ3cml0dGVuIGJ5IHNjcmlwdC4gKioqXG4uZml4ZWQtYWJvdmUgeyBtYXJnaW4tdG9wOiA0LjBlbTsgfVxuLy8gLS0tIE1lZGlhIHJ1bGVzIGZvciBzbWFsbCBzY3JlZW5zIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqKipcbkBtZWRpYSAobWF4LXdpZHRoOiAkYnJlYWtEZXNrdG9wKSB7XG4gICN0aXRsZS1ib3ggeyBjbGVhcjogYm90aDsgfVxufVxuLy8gLS0tIENvcHlyaWdodCAoYykgMjAxNy0yMDE4IE1vb3RseSBPYnZpYXRlIC0gU2VlIC9MSUNFTlNFLm1kIC0tLS0tLS0tLS0tLS0tLSAqKipcbiIsCgkJIi8vID09PSAwNSBMYXlvdXQgLSAwNSBCcmVhZGNydW1iIG1lbnUgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKioqXG4jY29udGVudC1tYWluICNicmVhZGNydW1iLWJveCB7XG4gIHBhZGRpbmcgICAgICAgICAgIDogMC4zNzVlbSAwIDAuMjVlbSAxLjBlbTtcbiAgYmFja2dyb3VuZC1jb2xvciAgOiAkYy1iYXNlLWJnO1xuICBjb2xvciAgICAgICAgICAgICA6ICRjLWdyYXktYm9yZGVyO1xuICBhIHtcbiAgICBmb250LWZhbWlseSAgICAgOiAkZi1uYXY7XG4gICAgZm9udC13ZWlnaHQgICAgIDogYm9sZDtcbiAgICBib3JkZXIgICAgICAgICAgOiAwO1xuICB9XG4gIGE6aG92ZXIge1xuICAgIEBpbmNsdWRlIHNldC1ibGVuZGVkLWJvcmRlcigkYy1saW5rcy10ZXh0LCBib3R0b20sIDAuODUsIDFweCwgc29saWQsICRjLWZvb3Rlci1iZyk7XG4gIH1cbn1cbi8vIE1lZGlhIHJ1bGVzIGZvciBzbWFsbCBzY3JlZW5zIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKioqXG5AbWVkaWEgKG1heC13aWR0aDogJGJyZWFrRGVza3RvcCkge1xuICAjY29udGVudC1tYWluICNicmVhZGNydW1iLWJveCB7XG4gICAgQGluY2x1ZGUgc2V0LWJsZW5kZWQtYm9yZGVyKCRjLWJhbm5lci1iZywgdG9wLCAwLjI1LCAxcHgsIHNvbGlkLCAkYy1iYXNlLWJnKTtcbiAgICBAaW5jbHVkZSBzZXQtYmxlbmRlZC1ib3JkZXIoJGMtYmFubmVyLWJnLCBib3R0b20sIDAuMjUsIDFweCwgc29saWQsICRjLWJhc2UtYmcpXG4gIH1cbn1cbi8vIC0tLSBDb3B5cmlnaHQgKGMpIDIwMTctMjAxOCBNb290bHkgT2J2aWF0ZSAtIFNlZSAvTElDRU5TRS5tZCAtLS0tLS0tLS0tLS0tLS0gKioqXG4iLAoJCSIvLyAwNiBQYXJ0cy0gMDMgQ29kZSA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICoqKlxucHJlIHtcbiAgQGluY2x1ZGUgc2V0LWJsZW5kZWQtYmFja2dyb3VuZCgkYy1pbnZlcnNlLWJnLCAwLjA2MjUsICRjLWJhc2UtYmcpO1xuICBAaW5jbHVkZSBzZXQtYmxlbmRlZC1ib3JkZXIoJGMtaW52ZXJzZS1iZywgbGVmdCwgMC4yNSwgMC41ZW0sIHNvbGlkLCAkYy1iYXNlLWJnKTtcbiAgb3ZlcmZsb3cgICAgICAgICAgOiBhdXRvO1xuICBjb2xvciAgICAgICAgICAgICA6ICRjLWNvZGU7XG4gIHBhZGRpbmcgICAgICAgICAgIDogMC43NWVtO1xuICBmb250LWZhbWlseSAgICAgICA6ICRmLWNvZGU7XG4gIGZvbnQtc2l6ZSAgICAgICAgIDogMC44NzVlbTtcbiAgbGluZS1oZWlnaHQ6ICRodC1saW5lLXRhbGw7XG4gIHZhciB7XG4gICAgY29sb3IgICAgICAgICAgIDogJGMtZ3JheS10ZXh0O1xuICAgIGZvbnQtc3R5bGUgICAgICA6IGl0YWxpYztcbiAgfVxufVxuXG5jb2RlIHtcbiAgZm9udC1mYW1pbHkgICAgICAgOiAkZi1jb2RlO1xuICBjb2xvciAgICAgICAgICAgICA6ICRjLWNvZGU7XG4gIHZhciB7XG4gICAgY29sb3IgICAgICAgICAgIDogJGMtZ3JheS10ZXh0O1xuICAgIGZvbnQtc3R5bGUgICAgICA6IGl0YWxpYztcbiAgfVxufVxuIiwKCQkiLy8gPT09IDA2IFBhcnRzLSAwNSBVdGlpdHkgQ2xhc3NlcyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqKipcbi5jZW50ZXIge1xuICB0ZXh0LWFsaWduICAgICAgICA6IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQgICAgICAgOiBhdXRvO1xuICBtYXJnaW4tcmlnaHQgICAgICA6IGF1dG87XG59XG4uZmxlZnQge1xuICBmbG9hdCAgICAgICAgICAgICA6IGxlZnQ7XG4gIG1hcmdpbi1yaWdodCAgICAgIDogMS4wZW07XG59XG4uZnJpZ2h0IHtcbiAgZmxvYXQgICAgICAgICAgICAgOiByaWdodDtcbiAgbWFyZ2luLWxlZnQgICAgICAgOiAxLjBlbTtcbiB9XG4uY2xlYXItZml4IHsgY2xlYXIgIDogYm90aDsgfVxuLmNsZWFyLWxlZnQgeyBjbGVhciA6IGxlZnQ7IH1cbi5jbGVhci1yaWdodCB7IGNsZWFyOiByaWdodDsgfVxuLmZpeGVkLXRvcCB7XG4gIHBvc2l0aW9uICAgICAgICAgIDogZml4ZWQ7XG4gIHRvcCAgICAgICAgICAgICAgIDogMDtcbiAgbGVmdCAgICAgICAgICAgICAgOiAwO1xuICB3aWR0aCAgICAgICAgICAgICA6IDEwMCU7XG59XG4uZml4ZWQtYm90dG9tIHtcbiAgcG9zaXRpb24gICAgICAgICAgOiBmaXhlZDtcbiAgYm90dG9tICAgICAgICAgICAgOiAwO1xuICBsZWZ0ICAgICAgICAgICAgICA6IDA7XG4gIHdpZHRoICAgICAgICAgICAgIDogMTAwJTtcbn1cbiAgICAgICAgICAgICAgICAgICAgLy8gSGlkZGVuIGVsZW1lbnQgcnVsZXMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKioqXG4ubW9iaWxlLW9ubHksIC5oaWRlIHsgZGlzcGxheTogbm9uZTsgfVxuLmhpZGRlbiB7XG4gIHdpZHRoICAgICAgICAgICAgIDogMDtcbiAgaGVpZ2h0ICAgICAgICAgICAgOiAwO1xuICBvdmVyZmxvdyAgICAgICAgICA6IGhpZGRlbjtcbn1cbi50b2dnbGVIaWRlIHsgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG4udG9nZ2xlU2hvdyB7IGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7IH1cblxuICAgICAgICAgICAgICAgICAgICAvLyBuby1zY3JpcHQgdHdlYWsgZm9yIGp1bXAgbGluayBzY3JvbGwgaGVpZ2h0ICAgICAgICAgICAgICAqKipcbmRpdi5hbmNob3IsXG5kaXYuYW5jaG9yOmZvY3VzIHsgb3V0bGluZTogbm9uZTsgfVxuLmFuY2hvcjpiZWZvcmUge1xuICBkaXNwbGF5ICAgICAgICAgICA6IGJsb2NrO1xuICBwb3NpdGlvbiAgICAgICAgICA6IHJlbGF0aXZlO1xuICB3aWR0aCAgICAgICAgICAgICA6IDA7XG4gIGhlaWdodCAgICAgICAgICAgIDogMi41ZW07XG4gIG1hcmdpbi10b3AgICAgICAgIDogLTIuNWVtO1xuICBjb250ZW50ICAgICAgICAgICA6ICcnO1xufVxuLy8gLS0tIENvcHlyaWdodCAoYykgMjAxNy0yMDE4IE1vb3RseSBPYnZpYXRlIC0gU2VlIC9MSUNFTlNFLm1kIC0tLS0tLS0tLS0tLS0tLSAqKipcbiIsCgkJIi8vIDExIEN1c3RvbWUgLSAwMSBBbHQgc3R5bGUgb3ZlcnJpZGVzIGZvciBib2R5IGNsYXNzICdkcmFmdCcgPT09PT09PT09PT09PT09PT0gKioqXG5ib2R5LmRyYWZ0IHtcbiAgZm9udC1mYW1pbHk6ICRmLWRyYWZ0LWRlZmF1bHQ7XG4gICNwYWdlLWhlYWRlciB7XG4gICAgZm9udC1mYW1pbHkgICAgIDogJGYtZHJhZnQtbmF2O1xuICAgICNoZWFkZXItdGl0bGUge1xuICAgICAgZm9udC1mYW1pbHkgICAgIDogJGYtZHJhZnQtdGl0bGU7XG4gICAgfVxuICB9XG4gICN0aXRsZS1ib3gge1xuICAgIGgxLCBoMi5wYWdlLXRpdGxlIHsgZm9udC1mYW1pbHk6ICRmLWRyYWZ0LXRpdGxlOyB9XG4gIH1cbiAgI2NvbnRlbnQtbWFpbiB7XG4gICAgI2JyZWFkY3J1bWItYm94IHtcbiAgICAgIGEgeyBmb250LWZhbWlseTogJGYtZHJhZnQtbmF2OyB9XG4gICAgfVxuICAgIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYgeyBmb250LWZhbWlseTogJGYtZHJhZnQtdGl0bGU7IH1cbiAgfVxuICBwcmUsIGNvZGUge1xuICAgIGZvbnQtZmFtaWx5OiAkZi1kcmFmdC1jb2RlO1xuICB9XG59XG4vLyAtLS0gQ29weXJpZ2h0IChjKSAyMDE3LTIwMTggTW9vdGx5IE9idmlhdGUgLSBTZWUgL0xJQ0VOU0UubWQgLS0tLS0tLS0tLS0tLS0tICoqKlxuIgoJXSwKCSJtYXBwaW5ncyI6ICJBR0lBLE9BQU8sQ0FBQywrREFBSSxDQUNaLE9BQU8sQ0FBQyxxRUFBSSxDQUNaLE9BQU8sQ0FBQyw4REFBSSxDQUNaLE9BQU8sQ0FBQyw4REFBSSxDQUNaLE9BQU8sQ0FBQywwREFBSSxDQUNaLE9BQU8sQ0FBQyxpRkFBSSxDSUhaLEFBQUEsSUFBSSxBQUFDLENBRUgsU0FBUyxDQUFpQixJQUFLLENBQy9CLG9CQUFvQixDQUFNLElBQUssQ0FDL0Isd0JBQXdCLENBQUUsSUFBSyxDQUMvQixNQUFNLENBQW9CLElBQUssQ0FDaEMsQUFFRCxBQUFBLElBQUksQUFBQyxDQUFFLE1BQU0sQ0FBRSxDQUFFLENBQUUsTUFBTSxDQUFFLElBQUssQ0FBRSxXQUFXLENKRnZCLE1BQU0sQ0FBRSxPQUFPLENBQUUsVUFBVSxDSUVZLEFBRzdELEFBQUEsT0FBTyxDQUNQLEFBQUEsS0FBSyxDQUNMLEFBQUEsT0FBTyxDQUNQLEFBQUEsVUFBVSxDQUNWLEFBQUEsTUFBTSxDQUNOLEFBQUEsTUFBTSxDQUNOLEFBQUEsTUFBTSxDQUNOLEFBQUEsTUFBTSxDQUNOLEFBQUEsSUFBSSxDQUNKLEFBQUEsSUFBSSxDQUNKLEFBQUEsR0FBRyxDQUNILEFBQUEsT0FBTyxDQUNQLEFBQUEsT0FBTyxBQUFD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 */